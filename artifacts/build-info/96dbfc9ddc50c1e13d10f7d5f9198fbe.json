{
	"id": "96dbfc9ddc50c1e13d10f7d5f9198fbe",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"pegged-token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.17;\n\ninterface IZRC20 {\n  /**\n   * @dev Returns the amount of tokens in existence.\n   */\n  function totalSupply() external view returns (uint256);\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8);\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory);\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory);\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address);\n\n  /**\n   * @dev Returns the amount of tokens owned by `account`.\n   */\n  function balanceOf(address account) external view returns (uint256);\n\n  /**\n   * @dev Moves `amount` tokens from the caller's account to `recipient`.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Returns the remaining number of tokens that `spender` will be\n   * allowed to spend on behalf of `owner` through {transferFrom}. This is\n   * zero by default.\n   *\n   * This value changes when {approve} or {transferFrom} are called.\n   */\n  function allowance(address _owner, address spender) external view returns (uint256);\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * IMPORTANT: Beware that changing an allowance with this method brings the risk\n   * that someone may use both the old and the new allowance by unfortunate\n   * transaction ordering. One possible solution to mitigate this race\n   * condition is to first reduce the spender's allowance to 0 and set the\n   * desired value afterwards:\n   * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n   *\n   * Emits an {Approval} event.\n   */\n  function approve(address spender, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Moves `amount` tokens from `sender` to `recipient` using the\n   * allowance mechanism. `amount` is then deducted from the caller's\n   * allowance.\n   *\n   * Returns a boolean value indicating whether the operation succeeded.\n   *\n   * Emits a {Transfer} event.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n  /**\n   * @dev Emitted when `value` tokens are moved from one account (`from`) to\n   * another (`to`).\n   *\n   * Note that `value` may be zero.\n   */\n  event Transfer(address indexed from, address indexed to, uint256 value);\n\n  /**\n   * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n   * a call to {approve}. `value` is the new allowance.\n   */\n  event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n  // Empty internal constructor, to prevent people from mistakenly deploying\n  // an instance of this contract, which should be used via inheritance.\n  constructor ()  { }\n\n  function _msgSender() internal view returns (address payable) {\n    return payable(msg.sender);\n  }\n\n  function _msgData() internal view returns (bytes memory) {\n    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    return msg.data;\n  }\n}\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\ncontract Ownable is Context {\n  address private _owner;\n\n  event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n  /**\n   * @dev Initializes the contract setting the deployer as the initial owner.\n   */\n  constructor ()  {\n    address msgSender = _msgSender();\n    _owner = msgSender;\n    emit OwnershipTransferred(address(0), msgSender);\n  }\n\n  /**\n   * @dev Returns the address of the current owner.\n   */\n  function owner() public view returns (address) {\n    return _owner;\n  }\n\n  /**\n   * @dev Throws if called by any account other than the owner.\n   */\n  modifier onlyOwner() {\n    require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n    _;\n  }\n\n  /**\n   * @dev Leaves the contract without owner. It will not be possible to call\n   * `onlyOwner` functions anymore. Can only be called by the current owner.\n   *\n   * NOTE: Renouncing ownership will leave the contract without an owner,\n   * thereby removing any functionality that is only available to the owner.\n   */\n  function renounceOwnership() public onlyOwner {\n    emit OwnershipTransferred(_owner, address(0));\n    _owner = address(0);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   * Can only be called by the current owner.\n   */\n  function transferOwnership(address newOwner) public onlyOwner {\n    _transferOwnership(newOwner);\n  }\n\n  /**\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\n   */\n  function _transferOwnership(address newOwner) internal {\n    require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n    emit OwnershipTransferred(_owner, newOwner);\n    _owner = newOwner;\n  }\n}\n\ncontract USDT is Context, IZRC20, Ownable {\n\n  mapping (address => uint256) private _balances;\n\n  mapping (address => mapping (address => uint256)) private _allowances;\n\n  uint256 private _totalSupply;\n  uint8 private _decimals;\n  string private _symbol;\n  string private _name;\n\naddress private _depositor;\n\n  constructor()  {\n    _name = \"MainnetZ Pegged zUSDT Token\";\n     _symbol = \"zUSDT\";\n    _decimals = 18;\n\n    emit Transfer(address(0), msg.sender, _totalSupply);\n  }\n\n\n    modifier onlyDepositor() {\n    require(_msgSender() == _depositor, \"caller is not the depositor\");\n    _;\n  }\n\n  function setDepositor(address depositor) external onlyOwner {\n    _depositor = depositor;\n  }\n\n\n  /**\n   * @dev Returns the bep token owner.\n   */\n  function getOwner() external view returns (address) {\n    return owner();\n  }\n\n  /**\n   * @dev Returns the token decimals.\n   */\n  function decimals() external view returns (uint8) {\n    return _decimals;\n  }\n\n  /**\n   * @dev Returns the token symbol.\n   */\n  function symbol() external view returns (string memory) {\n    return _symbol;\n  }\n\n  /**\n  * @dev Returns the token name.\n  */\n  function name() external view returns (string memory) {\n    return _name;\n  }\n\n  /**\n   * @dev See {ZRC20-totalSupply}.\n   */\n  function totalSupply() external view returns (uint256) {\n    return _totalSupply;\n  }\n\n  /**\n   * @dev See {ZRC20-balanceOf}.\n   */\n  function balanceOf(address account) external view returns (uint256) {\n    return _balances[account];\n  }\n\n  /**\n   * @dev See {ZRC20-transfer}.\n   *\n   * Requirements:\n   *\n   * - `recipient` cannot be the zero address.\n   * - the caller must have a balance of at least `amount`.\n   */\n  function transfer(address recipient, uint256 amount) external returns (bool) {\n    _transfer(_msgSender(), recipient, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {ZRC20-allowance}.\n   */\n  function allowance(address owner, address spender) external view returns (uint256) {\n    return _allowances[owner][spender];\n  }\n\n  /**\n   * @dev See {ZRC20-approve}.\n   *\n   * Requirements:\n   *\n   * - `spender` cannot be the zero address.\n   */\n  function approve(address spender, uint256 amount) external returns (bool) {\n    _approve(_msgSender(), spender, amount);\n    return true;\n  }\n\n  /**\n   * @dev See {ZRC20-transferFrom}.\n   *\n   * Emits an {Approval} event indicating the updated allowance. This is not\n   * required by the EIP. See the note at the beginning of {ZRC20};\n   *\n   * Requirements:\n   * - `sender` and `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   * - the caller must have allowance for `sender`'s tokens of at least\n   * `amount`.\n   */\n  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {\n    _transfer(sender, recipient, amount);\n    _approve(sender, _msgSender(), _allowances[sender][_msgSender()] - amount);\n    return true;\n  }\n\n\n  /**\n   * @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n   * the total supply.\n   *\n   * Requirements\n   *\n   * - `msg.sender` must be the token owner\n   */\n  function mint(address account,uint256 amount) public onlyDepositor returns (bool) {\n    require(account!=address(0),\"invalid account\");\n    require(amount>0,\"invalid amount\");\n    _mint(account, amount);\n    return true;\n  }\n\n  /**\n   * @dev Burn `amount` tokens and decreasing the total supply.\n   */\n  function burn(address account ,uint256 amount) public onlyDepositor returns (bool) {\n    require(account!=address(0),\"invalid account\");\n    require(amount>0,\"invalid amount\");\n    _burn(account, amount);\n    return true;\n  }\n\n  /**\n   * @dev Moves tokens `amount` from `sender` to `recipient`.\n   *\n   * This is internal function is equivalent to {transfer}, and can be used to\n   * e.g. implement automatic token fees, slashing mechanisms, etc.\n   *\n   * Emits a {Transfer} event.\n   *\n   * Requirements:\n   *\n   * - `sender` cannot be the zero address.\n   * - `recipient` cannot be the zero address.\n   * - `sender` must have a balance of at least `amount`.\n   */\n  function _transfer(address sender, address recipient, uint256 amount) internal {\n    require(sender != address(0), \"ZRC20: transfer from the zero address\");\n    require(recipient != address(0), \"ZRC20: transfer to the zero address\");\n\n    _balances[sender] = _balances[sender] - amount;\n    _balances[recipient] = _balances[recipient] + amount;\n    emit Transfer(sender, recipient, amount);\n  }\n\n  /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n   * the total supply.\n   *\n   * Emits a {Transfer} event with `from` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `to` cannot be the zero address.\n   */\n  function _mint(address account, uint256 amount) internal {\n    require(account != address(0), \"ZRC20: mint to the zero address\");\n\n    _totalSupply = _totalSupply + amount;\n    _balances[account] = _balances[account] + amount;\n    emit Transfer(address(0), account, amount);\n  }\n\n  /**\n   * @dev Destroys `amount` tokens from `account`, reducing the\n   * total supply.\n   *\n   * Emits a {Transfer} event with `to` set to the zero address.\n   *\n   * Requirements\n   *\n   * - `account` cannot be the zero address.\n   * - `account` must have at least `amount` tokens.\n   */\n  function _burn(address account, uint256 amount) internal {\n    require(account != address(0), \"ZRC20: burn from the zero address\");\n\n    _balances[account] = _balances[account] - amount;\n    _totalSupply = _totalSupply - amount;\n    emit Transfer(account, address(0), amount);\n  }\n\n  /**\n   * @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n   *\n   * This is internal function is equivalent to `approve`, and can be used to\n   * e.g. set automatic allowances for certain subsystems, etc.\n   *\n   * Emits an {Approval} event.\n   *\n   * Requirements:\n   *\n   * - `owner` cannot be the zero address.\n   * - `spender` cannot be the zero address.\n   */\n  function _approve(address owner, address spender, uint256 amount) internal {\n    require(owner != address(0), \"ZRC20: approve from the zero address\");\n    require(spender != address(0), \"ZRC20: approve to the zero address\");\n\n    _allowances[owner][spender] = amount;\n    emit Approval(owner, spender, amount);\n  }\n\n  /*Self destruct*/\n  function destroyContract() external onlyOwner{\n    selfdestruct(payable(_msgSender()));\n  }\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"pegged-token.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"pegged-token.sol\":3425:3936  contract Context {... */\n  mstore(0x40, 0x80)\n    /* \"pegged-token.sol\":3596:3615  constructor ()  { } */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"pegged-token.sol\":3425:3936  contract Context {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"pegged-token.sol\":3425:3936  contract Context {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207794284b7d061c793e092ec62d3fff8589efd42f358673491228e61e49be15c564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212207794284b7d061c793e092ec62d3fff8589efd42f358673491228e61e49be15c564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x94284B7D061C793E092EC62D3FFF8589EFD42F3586734912 0x28 0xE6 0x1E 0x49 0xBE ISZERO 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3425:511:0:-:0;;;3596:19;;;;;;;;;;3425:511;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212207794284b7d061c793e092ec62d3fff8589efd42f358673491228e61e49be15c564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x94284B7D061C793E092EC62D3FFF8589EFD42F3586734912 0x28 0xE6 0x1E 0x49 0xBE ISZERO 0xC5 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "3425:511:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_msgData()": "infinite",
								"_msgSender()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3425,
									"end": 3936,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 3425,
									"end": 3936,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3425,
									"end": 3936,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3596,
									"end": 3615,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3596,
									"end": 3615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3596,
									"end": 3615,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3596,
									"end": 3615,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3596,
									"end": 3615,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3596,
									"end": 3615,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3596,
									"end": 3615,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3596,
									"end": 3615,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3596,
									"end": 3615,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3596,
									"end": 3615,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3596,
									"end": 3615,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3425,
									"end": 3936,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3425,
									"end": 3936,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3425,
									"end": 3936,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3425,
									"end": 3936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3425,
									"end": 3936,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3425,
									"end": 3936,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3425,
									"end": 3936,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207794284b7d061c793e092ec62d3fff8589efd42f358673491228e61e49be15c564736f6c63430008110033",
									".code": [
										{
											"begin": 3425,
											"end": 3936,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3425,
											"end": 3936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3425,
											"end": 3936,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"pegged-token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"pegged-token.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"pegged-token.sol\":{\"keccak256\":\"0x20c894949e37ee4d6c76100fa143bc86e22dfa609d5e6682f1466bddd0542951\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6f91132d1945f74f98736859a9868a6eec99cbeacefc1e8bb231c04f45ae892\",\"dweb:/ipfs/QmeCPjzdm94HQcyxBq2RkYkwJRDebYFSdTvNQpSo7yaXcd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IZRC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"name()": {
								"details": "Returns the token name."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getOwner()": "893d20e8",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"pegged-token.sol\":\"IZRC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"pegged-token.sol\":{\"keccak256\":\"0x20c894949e37ee4d6c76100fa143bc86e22dfa609d5e6682f1466bddd0542951\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6f91132d1945f74f98736859a9868a6eec99cbeacefc1e8bb231c04f45ae892\",\"dweb:/ipfs/QmeCPjzdm94HQcyxBq2RkYkwJRDebYFSdTvNQpSo7yaXcd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"pegged-token.sol\":4999:6697  contract Ownable is Context {... */\n  mstore(0x40, 0x80)\n    /* \"pegged-token.sol\":5236:5373  constructor ()  {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"pegged-token.sol\":5258:5275  address msgSender */\n  0x00\n    /* \"pegged-token.sol\":5296:5314  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"pegged-token.sol\":3702:3712  msg.sender */\n  caller\n    /* \"pegged-token.sol\":5296:5314  _owner = msgSender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"pegged-token.sol\":5325:5368  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"pegged-token.sol\":3702:3712  msg.sender */\n  swap1\n  swap2\n  dup3\n  swap2\n    /* \"pegged-token.sol\":5325:5368  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"pegged-token.sol\":5258:5275  address msgSender */\n  dup3\n  swap1\n    /* \"pegged-token.sol\":5325:5368  OwnershipTransferred(address(0), msgSender) */\n  log3\n    /* \"pegged-token.sol\":5252:5373  {... */\n  pop\n    /* \"pegged-token.sol\":4999:6697  contract Ownable is Context {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"pegged-token.sol\":4999:6697  contract Ownable is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"pegged-token.sol\":6024:6151  function renounceOwnership() public onlyOwner {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"pegged-token.sol\":5441:5512  function owner() public view returns (address) {... */\n    tag_4:\n        /* \"pegged-token.sol\":5479:5486  address */\n      0x00\n        /* \"pegged-token.sol\":5501:5507  _owner */\n      sload\n        /* \"pegged-token.sol\":5441:5512  function owner() public view returns (address) {... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":5501:5507  _owner */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":160:211   */\n      dup3\n      mstore\n        /* \"pegged-token.sol\":5441:5512  function owner() public view returns (address) {... */\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"pegged-token.sol\":5441:5512  function owner() public view returns (address) {... */\n      add\n      swap1\n      return\n        /* \"pegged-token.sol\":6290:6391  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_5:\n      tag_6\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n        /* \"pegged-token.sol\":6024:6151  function renounceOwnership() public onlyOwner {... */\n    tag_7:\n        /* \"pegged-token.sol\":5627:5633  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"pegged-token.sol\":3702:3712  msg.sender */\n      caller\n        /* \"pegged-token.sol\":5627:5649  _owner == _msgSender() */\n      eq\n        /* \"pegged-token.sol\":5619:5686  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_19\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"pegged-token.sol\":5619:5686  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n        /* \"#utility.yul\":793:827   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":773:791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":766:828   */\n      mstore\n        /* \"#utility.yul\":845:863   */\n      0x64\n      add\n        /* \"pegged-token.sol\":5619:5686  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"pegged-token.sol\":6118:6119  0 */\n      0x00\n        /* \"pegged-token.sol\":6102:6108  _owner */\n      dup1\n      sload\n        /* \"pegged-token.sol\":6081:6121  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":6102:6108  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"pegged-token.sol\":6081:6121  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"pegged-token.sol\":6118:6119  0 */\n      dup4\n      swap1\n        /* \"pegged-token.sol\":6081:6121  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"pegged-token.sol\":6144:6145  0 */\n      0x00\n        /* \"pegged-token.sol\":6127:6146  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"pegged-token.sol\":6024:6151  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"pegged-token.sol\":6290:6391  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_15:\n        /* \"pegged-token.sol\":5627:5633  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"pegged-token.sol\":3702:3712  msg.sender */\n      caller\n        /* \"pegged-token.sol\":5627:5649  _owner == _msgSender() */\n      eq\n        /* \"pegged-token.sol\":5619:5686  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_26\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"pegged-token.sol\":5619:5686  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":697:718   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":734:752   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n        /* \"#utility.yul\":793:827   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":773:791   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":766:828   */\n      mstore\n        /* \"#utility.yul\":845:863   */\n      0x64\n      add\n        /* \"pegged-token.sol\":5619:5686  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_20\n        /* \"#utility.yul\":513:869   */\n      jump\n        /* \"pegged-token.sol\":5619:5686  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_26:\n        /* \"pegged-token.sol\":6358:6386  _transferOwnership(newOwner) */\n      tag_29\n        /* \"pegged-token.sol\":6377:6385  newOwner */\n      dup2\n        /* \"pegged-token.sol\":6358:6376  _transferOwnership */\n      tag_30\n        /* \"pegged-token.sol\":6358:6386  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_29:\n        /* \"pegged-token.sol\":6290:6391  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"pegged-token.sol\":6484:6695  function _transferOwnership(address newOwner) internal {... */\n    tag_30:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":6553:6575  newOwner != address(0) */\n      dup2\n      and\n        /* \"pegged-token.sol\":6545:6618  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1076:1078   */\n      0x20\n        /* \"pegged-token.sol\":6545:6618  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1058:1079   */\n      mstore\n        /* \"#utility.yul\":1115:1117   */\n      0x26\n        /* \"#utility.yul\":1095:1113   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1088:1118   */\n      mstore\n        /* \"#utility.yul\":1154:1188   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1134:1152   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1127:1189   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":1205:1223   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1198:1234   */\n      mstore\n        /* \"#utility.yul\":1251:1270   */\n      0x84\n      add\n        /* \"pegged-token.sol\":6545:6618  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_20\n        /* \"#utility.yul\":874:1276   */\n      jump\n        /* \"pegged-token.sol\":6545:6618  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_33:\n        /* \"pegged-token.sol\":6650:6656  _owner */\n      0x00\n      dup1\n      sload\n        /* \"pegged-token.sol\":6629:6667  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"pegged-token.sol\":6650:6656  _owner */\n      swap3\n      and\n      swap2\n        /* \"pegged-token.sol\":6629:6667  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"pegged-token.sol\":6673:6679  _owner */\n      0x00\n        /* \"pegged-token.sol\":6673:6690  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"pegged-token.sol\":6484:6695  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n        /* \"#utility.yul\":222:508   */\n    tag_14:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":334:336   */\n      0x20\n        /* \"#utility.yul\":322:331   */\n      dup3\n        /* \"#utility.yul\":313:320   */\n      dup5\n        /* \"#utility.yul\":309:332   */\n      sub\n        /* \"#utility.yul\":305:337   */\n      slt\n        /* \"#utility.yul\":302:354   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":350:351   */\n      0x00\n        /* \"#utility.yul\":347:348   */\n      dup1\n        /* \"#utility.yul\":340:352   */\n      revert\n        /* \"#utility.yul\":302:354   */\n    tag_39:\n        /* \"#utility.yul\":376:399   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":428:459   */\n      dup2\n      and\n        /* \"#utility.yul\":418:460   */\n      dup2\n      eq\n        /* \"#utility.yul\":408:478   */\n      tag_40\n      jumpi\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":471:472   */\n      dup1\n        /* \"#utility.yul\":464:476   */\n      revert\n        /* \"#utility.yul\":408:478   */\n    tag_40:\n        /* \"#utility.yul\":497:502   */\n      swap4\n        /* \"#utility.yul\":222:508   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206ebe8955d59957b8bea8bbe4408d8e865467a044ffda5842d8d3eb7246069d7564736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_161": {
									"entryPoint": null,
									"id": 161,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506102b7806100616000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561026357600080fd5b81356001600160a01b038116811461027a57600080fd5b939250505056fea26469706673582212206ebe8955d59957b8bea8bbe4408d8e865467a044ffda5842d8d3eb7246069d7564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0x2B7 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xBE8955D59957B8BEA8BBE4408D8E86 SLOAD PUSH8 0xA044FFDA5842D8D3 0xEB PUSH19 0x46069D7564736F6C6343000811003300000000 ",
							"sourceMap": "4999:1698:0:-:0;;;5236:137;;;;;;;;;-1:-1:-1;5258:17:0;5296:18;;-1:-1:-1;;;;;;5296:18:0;3702:10;5296:18;;;;;5325:43;;3702:10;;;;5325:43;;5258:17;;5325:43;5252:121;4999:1698;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_244": {
									"entryPoint": 401,
									"id": 244,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_170": {
									"entryPoint": null,
									"id": 170,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_205": {
									"entryPoint": 130,
									"id": 205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_218": {
									"entryPoint": 299,
									"id": 218,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1278:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "292:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "338:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "347:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "350:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "305:32:1"
															},
															"nodeType": "YulIf",
															"src": "302:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "363:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "376:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "367:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "471:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "464:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "421:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "432:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "447:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "452:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "443:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "443:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "456:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "439:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "439:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "428:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "411:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:50:1"
															},
															"nodeType": "YulIf",
															"src": "408:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "487:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "497:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "258:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "269:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "281:6:1",
														"type": ""
													}
												],
												"src": "222:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "687:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "715:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "697:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "749:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "734:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "727:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "777:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "788:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "793:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "766:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "837:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "849:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "860:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "837:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "664:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "678:4:1",
														"type": ""
													}
												],
												"src": "513:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1048:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1065:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1076:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1058:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1058:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1058:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1099:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1110:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1095:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1115:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1088:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1149:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1134:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1154:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1209:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1220:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1205:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1225:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1198:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1198:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1198:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1243:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1255:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1266:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1251:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1243:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1025:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1039:4:1",
														"type": ""
													}
												],
												"src": "874:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006f575b600080fd5b61004e610082565b005b600054604080516001600160a01b039092168252519081900360200190f35b61004e61007d366004610251565b61012b565b6000546001600160a01b031633146100e15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146101855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016100d8565b61018e81610191565b50565b6001600160a01b0381166101f65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100d8565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561026357600080fd5b81356001600160a01b038116811461027a57600080fd5b939250505056fea26469706673582212206ebe8955d59957b8bea8bbe4408d8e865467a044ffda5842d8d3eb7246069d7564736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x7D CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH2 0x18E DUP2 PUSH2 0x191 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xBE8955D59957B8BEA8BBE4408D8E86 SLOAD PUSH8 0xA044FFDA5842D8D3 0xEB PUSH19 0x46069D7564736F6C6343000811003300000000 ",
							"sourceMap": "4999:1698:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6024:127;;;:::i;:::-;;5441:71;5479:7;5501:6;5441:71;;;-1:-1:-1;;;;;5501:6:0;;;160:51:1;;5441:71:0;;;;;148:2:1;5441:71:0;;;6290:101;;;;;;:::i;:::-;;:::i;6024:127::-;5627:6;;-1:-1:-1;;;;;5627:6:0;3702:10;5627:22;5619:67;;;;-1:-1:-1;;;5619:67:0;;715:2:1;5619:67:0;;;697:21:1;;;734:18;;;727:30;793:34;773:18;;;766:62;845:18;;5619:67:0;;;;;;;;;6118:1:::1;6102:6:::0;;6081:40:::1;::::0;-1:-1:-1;;;;;6102:6:0;;::::1;::::0;6081:40:::1;::::0;6118:1;;6081:40:::1;6144:1;6127:19:::0;;-1:-1:-1;;;;;;6127:19:0::1;::::0;;6024:127::o;6290:101::-;5627:6;;-1:-1:-1;;;;;5627:6:0;3702:10;5627:22;5619:67;;;;-1:-1:-1;;;5619:67:0;;715:2:1;5619:67:0;;;697:21:1;;;734:18;;;727:30;793:34;773:18;;;766:62;845:18;;5619:67:0;513:356:1;5619:67:0;6358:28:::1;6377:8;6358:18;:28::i;:::-;6290:101:::0;:::o;6484:211::-;-1:-1:-1;;;;;6553:22:0;;6545:73;;;;-1:-1:-1;;;6545:73:0;;1076:2:1;6545:73:0;;;1058:21:1;1115:2;1095:18;;;1088:30;1154:34;1134:18;;;1127:62;-1:-1:-1;;;1205:18:1;;;1198:36;1251:19;;6545:73:0;874:402:1;6545:73:0;6650:6;;;6629:38;;-1:-1:-1;;;;;6629:38:0;;;;6650:6;;;6629:38;;;6673:6;:17;;-1:-1:-1;;;;;;6673:17:0;-1:-1:-1;;;;;6673:17:0;;;;;;;;;;6484:211::o;222:286:1:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:1;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "139000",
								"executionCost": "25956",
								"totalCost": "164956"
							},
							"external": {
								"owner()": "2292",
								"renounceOwnership()": "30143",
								"transferOwnership(address)": "30416"
							},
							"internal": {
								"_transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 4999,
									"end": 6697,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 4999,
									"end": 6697,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 4999,
									"end": 6697,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 5236,
									"end": 5373,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5236,
									"end": 5373,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5236,
									"end": 5373,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 5236,
									"end": 5373,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5236,
									"end": 5373,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 5236,
									"end": 5373,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5236,
									"end": 5373,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5236,
									"end": 5373,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 5236,
									"end": 5373,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 5236,
									"end": 5373,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5258,
									"end": 5275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3702,
									"end": 3712,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5325,
									"end": 5368,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5325,
									"end": 5368,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3702,
									"end": 3712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3702,
									"end": 3712,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3702,
									"end": 3712,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3702,
									"end": 3712,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5325,
									"end": 5368,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 5325,
									"end": 5368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5258,
									"end": 5275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5258,
									"end": 5275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5325,
									"end": 5368,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 5252,
									"end": 5373,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 4999,
									"end": 6697,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4999,
									"end": 6697,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4999,
									"end": 6697,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4999,
									"end": 6697,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4999,
									"end": 6697,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 4999,
									"end": 6697,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 4999,
									"end": 6697,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206ebe8955d59957b8bea8bbe4408d8e865467a044ffda5842d8d3eb7246069d7564736f6c63430008110033",
									".code": [
										{
											"begin": 4999,
											"end": 6697,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4999,
											"end": 6697,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6151,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6024,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6024,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6024,
											"end": 6151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6151,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6024,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6151,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5479,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6290,
											"end": 6391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6290,
											"end": 6391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6151,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6024,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3702,
											"end": 3712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 793,
											"end": 827,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 828,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 845,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 845,
											"end": 863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6118,
											"end": 6119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6081,
											"end": 6121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6108,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 6081,
											"end": 6121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6118,
											"end": 6119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6118,
											"end": 6119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6121,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6144,
											"end": 6145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6127,
											"end": 6146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6127,
											"end": 6146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6127,
											"end": 6146,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6127,
											"end": 6146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6127,
											"end": 6146,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3702,
											"end": 3712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 697,
											"end": 718,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 793,
											"end": 827,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 828,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 845,
											"end": 863,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 845,
											"end": 863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 869,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6377,
											"end": 6385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6376,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6358,
											"end": 6386,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6386,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6358,
											"end": 6386,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6695,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6484,
											"end": 6695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6553,
											"end": 6575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6553,
											"end": 6575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1117,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1188,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1251,
											"end": 1270,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1251,
											"end": 1270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 874,
											"end": 1276,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6650,
											"end": 6656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6656,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6656,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 222,
											"end": 508,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 336,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 313,
											"end": 320,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 309,
											"end": 332,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 305,
											"end": 337,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 302,
											"end": 354,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 302,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 340,
											"end": 352,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 302,
											"end": 354,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 376,
											"end": 399,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 418,
											"end": 460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 418,
											"end": 460,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 408,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 476,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 408,
											"end": 478,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 222,
											"end": 508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"pegged-token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"pegged-token.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"pegged-token.sol\":{\"keccak256\":\"0x20c894949e37ee4d6c76100fa143bc86e22dfa609d5e6682f1466bddd0542951\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6f91132d1945f74f98736859a9868a6eec99cbeacefc1e8bb231c04f45ae892\",\"dweb:/ipfs/QmeCPjzdm94HQcyxBq2RkYkwJRDebYFSdTvNQpSo7yaXcd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "pegged-token.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"USDT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "destroyContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "depositor",
									"type": "address"
								}
							],
							"name": "setDepositor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {ZRC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {ZRC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {ZRC20-balanceOf}."
							},
							"burn(address,uint256)": {
								"details": "Burn `amount` tokens and decreasing the total supply."
							},
							"decimals()": {
								"details": "Returns the token decimals."
							},
							"getOwner()": {
								"details": "Returns the bep token owner."
							},
							"mint(address,uint256)": {
								"details": "Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner"
							},
							"name()": {
								"details": "Returns the token name."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the token symbol."
							},
							"totalSupply()": {
								"details": "See {ZRC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {ZRC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {ZRC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ZRC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"pegged-token.sol\":6699:13131  contract USDT is Context, IZRC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"pegged-token.sol\":7010:7175  constructor()  {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"pegged-token.sol\":5258:5275  address msgSender */\n  0x00\n    /* \"pegged-token.sol\":5296:5314  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"pegged-token.sol\":3702:3712  msg.sender */\n  caller\n    /* \"pegged-token.sol\":5296:5314  _owner = msgSender */\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"pegged-token.sol\":5325:5368  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"pegged-token.sol\":3702:3712  msg.sender */\n  swap1\n  swap2\n  dup3\n  swap2\n    /* \"pegged-token.sol\":5325:5368  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"pegged-token.sol\":5258:5275  address msgSender */\n  dup3\n  swap1\n    /* \"pegged-token.sol\":5325:5368  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n    /* \"pegged-token.sol\":7031:7068  _name = \"MainnetZ Pegged zUSDT Token\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x1b\n  dup2\n  mstore\n  0x4d61696e6e65745a20506567676564207a5553445420546f6b656e0000000000\n  0x20\n  dup3\n  add\n  mstore\n    /* \"pegged-token.sol\":7031:7036  _name */\n  0x06\n  swap1\n    /* \"pegged-token.sol\":7031:7068  _name = \"MainnetZ Pegged zUSDT Token\" */\n  tag_10\n  swap1\n    /* \"pegged-token.sol\":7031:7036  _name */\n  dup3\n    /* \"pegged-token.sol\":7031:7068  _name = \"MainnetZ Pegged zUSDT Token\" */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"pegged-token.sol\":7075:7092  _symbol = \"zUSDT\" */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x05\n  dup1\n  dup3\n  mstore\n  shl(0xda, 0x1e9554d115)\n  0x20\n  dup4\n  add\n  mstore\n  swap1\n  tag_12\n  swap1\n  dup3\n  tag_11\n  jump\t// in\ntag_12:\n  pop\n    /* \"pegged-token.sol\":7098:7107  _decimals */\n  0x04\n    /* \"pegged-token.sol\":7098:7112  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"pegged-token.sol\":7110:7112  18 */\n  0x12\n    /* \"pegged-token.sol\":7098:7112  _decimals = 18 */\n  or\n  swap1\n  sstore\n    /* \"pegged-token.sol\":7157:7169  _totalSupply */\n  sload(0x03)\n    /* \"pegged-token.sol\":7124:7170  Transfer(address(0), msg.sender, _totalSupply) */\n  mload(0x40)\n    /* \"pegged-token.sol\":7145:7155  msg.sender */\n  caller\n  swap2\n    /* \"pegged-token.sol\":7098:7107  _decimals */\n  0x00\n  swap2\n    /* \"pegged-token.sol\":7124:7170  Transfer(address(0), msg.sender, _totalSupply) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n  tag_13\n  swap2\n    /* \"#utility.yul\":2881:2906   */\n  swap1\n  dup2\n  mstore\n    /* \"#utility.yul\":2869:2871   */\n  0x20\n    /* \"#utility.yul\":2854:2872   */\n  add\n  swap1\n    /* \"#utility.yul\":2735:2912   */\n  jump\n    /* \"pegged-token.sol\":7124:7170  Transfer(address(0), msg.sender, _totalSupply) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"pegged-token.sol\":6699:13131  contract USDT is Context, IZRC20, Ownable {... */\n  jump(tag_22)\n    /* \"#utility.yul\":14:141   */\ntag_17:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_18:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_25:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_26:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_20:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_30\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_30:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_31:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_31)\ntag_33:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_29:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_11:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_37\n  tag_17\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1582:1679   */\n  tag_38\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_39\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_18\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_20\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_41\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_42\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_42:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_33)\n    /* \"#utility.yul\":1810:2473   */\ntag_41:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_45:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_45)\ntag_47:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_48\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_48:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2735:2912   */\ntag_22:\n    /* \"pegged-token.sol\":6699:13131  contract USDT is Context, IZRC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"pegged-token.sol\":6699:13131  contract USDT is Context, IZRC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x9dc29fac\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2c098b7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x23b872dd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x092a5cce\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"pegged-token.sol\":7833:7910  function name() external view returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"pegged-token.sol\":13037:13128  function destroyContract() external onlyOwner{... */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      stop\n        /* \"pegged-token.sol\":8828:8969  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_5:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"pegged-token.sol\":8828:8969  function approve(address spender, uint256 amount) external returns (bool) {... */\n      tag_25\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"pegged-token.sol\":7961:8046  function totalSupply() external view returns (uint256) {... */\n    tag_6:\n        /* \"pegged-token.sol\":8029:8041  _totalSupply */\n      sload(0x03)\n        /* \"pegged-token.sol\":7961:8046  function totalSupply() external view returns (uint256) {... */\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"pegged-token.sol\":7961:8046  function totalSupply() external view returns (uint256) {... */\n      tag_25\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"pegged-token.sol\":9400:9641  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_7:\n      tag_29\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n        /* \"pegged-token.sol\":7575:7652  function decimals() external view returns (uint8) {... */\n    tag_8:\n        /* \"pegged-token.sol\":7638:7647  _decimals */\n      sload(0x04)\n        /* \"pegged-token.sol\":7575:7652  function decimals() external view returns (uint8) {... */\n      mload(0x40)\n        /* \"pegged-token.sol\":7638:7647  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"pegged-token.sol\":7575:7652  function decimals() external view returns (uint8) {... */\n      tag_25\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"pegged-token.sol\":9832:10056  function mint(address account,uint256 amount) public onlyDepositor returns (bool) {... */\n    tag_9:\n      tag_29\n      tag_49\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"pegged-token.sol\":8095:8199  function balanceOf(address account) external view returns (uint256) {... */\n    tag_10:\n      tag_35\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":8176:8194  _balances[account] */\n      and\n        /* \"pegged-token.sol\":8154:8161  uint256 */\n      0x00\n        /* \"pegged-token.sol\":8176:8194  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"pegged-token.sol\":8176:8185  _balances */\n      0x01\n        /* \"pegged-token.sol\":8176:8194  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"pegged-token.sol\":8095:8199  function balanceOf(address account) external view returns (uint256) {... */\n      jump\n        /* \"pegged-token.sol\":6024:6151  function renounceOwnership() public onlyOwner {... */\n    tag_11:\n      tag_27\n      tag_58\n      jump\t// in\n        /* \"pegged-token.sol\":7444:7521  function getOwner() external view returns (address) {... */\n    tag_12:\n        /* \"pegged-token.sol\":7487:7494  address */\n      0x00\n        /* \"pegged-token.sol\":5501:5507  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"pegged-token.sol\":7444:7521  function getOwner() external view returns (address) {... */\n    tag_59:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2255:2287   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2237:2288   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2225:2227   */\n      0x20\n        /* \"#utility.yul\":2210:2228   */\n      add\n        /* \"pegged-token.sol\":7444:7521  function getOwner() external view returns (address) {... */\n      tag_25\n        /* \"#utility.yul\":2091:2294   */\n      jump\n        /* \"pegged-token.sol\":5441:5512  function owner() public view returns (address) {... */\n    tag_13:\n        /* \"pegged-token.sol\":5479:5486  address */\n      0x00\n        /* \"pegged-token.sol\":5501:5507  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"pegged-token.sol\":5441:5512  function owner() public view returns (address) {... */\n      jump(tag_59)\n        /* \"pegged-token.sol\":7704:7785  function symbol() external view returns (string memory) {... */\n    tag_14:\n      tag_23\n      tag_67\n      jump\t// in\n        /* \"pegged-token.sol\":10136:10361  function burn(address account ,uint256 amount) public onlyDepositor returns (bool) {... */\n    tag_15:\n      tag_29\n      tag_70\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"pegged-token.sol\":8383:8530  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_16:\n      tag_29\n      tag_74\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"pegged-token.sol\":8579:8707  function allowance(address owner, address spender) external view returns (uint256) {... */\n    tag_17:\n      tag_35\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":8675:8693  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"pegged-token.sol\":8653:8660  uint256 */\n      0x00\n        /* \"pegged-token.sol\":8675:8693  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"pegged-token.sol\":8675:8686  _allowances */\n      0x02\n        /* \"pegged-token.sol\":8675:8693  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"pegged-token.sol\":8675:8702  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"pegged-token.sol\":8579:8707  function allowance(address owner, address spender) external view returns (uint256) {... */\n      jump\n        /* \"pegged-token.sol\":7295:7388  function setDepositor(address depositor) external onlyOwner {... */\n    tag_18:\n      tag_27\n      tag_83\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"pegged-token.sol\":6290:6391  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_19:\n      tag_27\n      tag_86\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"pegged-token.sol\":7833:7910  function name() external view returns (string memory) {... */\n    tag_24:\n        /* \"pegged-token.sol\":7872:7885  string memory */\n      0x60\n        /* \"pegged-token.sol\":7900:7905  _name */\n      0x06\n        /* \"pegged-token.sol\":7893:7905  return _name */\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_90\n      jump\t// in\n    tag_91:\n      dup1\n      iszero\n      tag_92\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_93\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_92)\n    tag_93:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_94:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_94\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"pegged-token.sol\":7833:7910  function name() external view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"pegged-token.sol\":13037:13128  function destroyContract() external onlyOwner{... */\n    tag_28:\n        /* \"pegged-token.sol\":5627:5633  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"pegged-token.sol\":3702:3712  msg.sender */\n      caller\n        /* \"pegged-token.sol\":5627:5649  _owner == _msgSender() */\n      eq\n        /* \"pegged-token.sol\":5619:5686  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"pegged-token.sol\":3702:3712  msg.sender */\n      caller\n        /* \"pegged-token.sol\":13088:13123  selfdestruct(payable(_msgSender())) */\n      selfdestruct\n        /* \"pegged-token.sol\":8828:8969  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_32:\n        /* \"pegged-token.sol\":8896:8900  bool */\n      0x00\n        /* \"pegged-token.sol\":8908:8947  _approve(_msgSender(), spender, amount) */\n      tag_104\n        /* \"pegged-token.sol\":3702:3712  msg.sender */\n      caller\n        /* \"pegged-token.sol\":8931:8938  spender */\n      dup5\n        /* \"pegged-token.sol\":8940:8946  amount */\n      dup5\n        /* \"pegged-token.sol\":8908:8916  _approve */\n      tag_106\n        /* \"pegged-token.sol\":8908:8947  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"pegged-token.sol\":8960:8964  true */\n      0x01\n        /* \"pegged-token.sol\":8828:8969  function approve(address spender, uint256 amount) external returns (bool) {... */\n    tag_103:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"pegged-token.sol\":9400:9641  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n    tag_42:\n        /* \"pegged-token.sol\":9491:9495  bool */\n      0x00\n        /* \"pegged-token.sol\":9503:9539  _transfer(sender, recipient, amount) */\n      tag_109\n        /* \"pegged-token.sol\":9513:9519  sender */\n      dup5\n        /* \"pegged-token.sol\":9521:9530  recipient */\n      dup5\n        /* \"pegged-token.sol\":9532:9538  amount */\n      dup5\n        /* \"pegged-token.sol\":9503:9512  _transfer */\n      tag_110\n        /* \"pegged-token.sol\":9503:9539  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":9576:9595  _allowances[sender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"pegged-token.sol\":9576:9587  _allowances */\n      0x02\n        /* \"pegged-token.sol\":9576:9595  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"pegged-token.sol\":3702:3712  msg.sender */\n      caller\n        /* \"pegged-token.sol\":9576:9609  _allowances[sender][_msgSender()] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"pegged-token.sol\":9545:9619  _approve(sender, _msgSender(), _allowances[sender][_msgSender()] - amount) */\n      tag_111\n      swap2\n        /* \"pegged-token.sol\":9554:9560  sender */\n      dup7\n      swap2\n        /* \"pegged-token.sol\":9576:9618  _allowances[sender][_msgSender()] - amount */\n      tag_114\n      swap1\n        /* \"pegged-token.sol\":9612:9618  amount */\n      dup7\n      swap1\n        /* \"pegged-token.sol\":9576:9618  _allowances[sender][_msgSender()] - amount */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"pegged-token.sol\":9545:9553  _approve */\n      tag_106\n        /* \"pegged-token.sol\":9545:9619  _approve(sender, _msgSender(), _allowances[sender][_msgSender()] - amount) */\n      jump\t// in\n    tag_111:\n      pop\n        /* \"pegged-token.sol\":9632:9636  true */\n      0x01\n        /* \"pegged-token.sol\":9400:9641  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"pegged-token.sol\":9832:10056  function mint(address account,uint256 amount) public onlyDepositor returns (bool) {... */\n    tag_50:\n        /* \"pegged-token.sol\":7237:7247  _depositor */\n      sload(0x07)\n        /* \"pegged-token.sol\":9908:9912  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":7237:7247  _depositor */\n      and\n        /* \"pegged-token.sol\":3702:3712  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":7221:7247  _msgSender() == _depositor */\n      and\n      eq\n        /* \"pegged-token.sol\":7213:7279  require(_msgSender() == _depositor, \"caller is not the depositor\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3777:3779   */\n      0x20\n        /* \"pegged-token.sol\":7213:7279  require(_msgSender() == _depositor, \"caller is not the depositor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3759:3780   */\n      mstore\n        /* \"#utility.yul\":3816:3818   */\n      0x1b\n        /* \"#utility.yul\":3796:3814   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3789:3819   */\n      mstore\n        /* \"#utility.yul\":3855:3884   */\n      0x63616c6c6572206973206e6f7420746865206465706f7369746f720000000000\n        /* \"#utility.yul\":3835:3853   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3828:3885   */\n      mstore\n        /* \"#utility.yul\":3902:3920   */\n      0x64\n      add\n        /* \"pegged-token.sol\":7213:7279  require(_msgSender() == _depositor, \"caller is not the depositor\") */\n      tag_99\n        /* \"#utility.yul\":3575:3926   */\n      jump\n        /* \"pegged-token.sol\":7213:7279  require(_msgSender() == _depositor, \"caller is not the depositor\") */\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":9928:9947  account!=address(0) */\n      dup4\n      and\n        /* \"pegged-token.sol\":9920:9966  require(account!=address(0),\"invalid account\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4133:4135   */\n      0x20\n        /* \"pegged-token.sol\":9920:9966  require(account!=address(0),\"invalid account\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4115:4136   */\n      mstore\n        /* \"#utility.yul\":4172:4174   */\n      0x0f\n        /* \"#utility.yul\":4152:4170   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4145:4175   */\n      mstore\n      shl(0x8a, 0x1a5b9d985b1a59081858d8dbdd5b9d)\n        /* \"#utility.yul\":4191:4209   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4184:4229   */\n      mstore\n        /* \"#utility.yul\":4246:4264   */\n      0x64\n      add\n        /* \"pegged-token.sol\":9920:9966  require(account!=address(0),\"invalid account\") */\n      tag_99\n        /* \"#utility.yul\":3931:4270   */\n      jump\n        /* \"pegged-token.sol\":9920:9966  require(account!=address(0),\"invalid account\") */\n    tag_123:\n        /* \"pegged-token.sol\":9987:9988  0 */\n      0x00\n        /* \"pegged-token.sol\":9980:9986  amount */\n      dup3\n        /* \"pegged-token.sol\":9980:9988  amount>0 */\n      gt\n        /* \"pegged-token.sol\":9972:10006  require(amount>0,\"invalid amount\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4477:4479   */\n      0x20\n        /* \"pegged-token.sol\":9972:10006  require(amount>0,\"invalid amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4459:4480   */\n      mstore\n        /* \"#utility.yul\":4516:4518   */\n      0x0e\n        /* \"#utility.yul\":4496:4514   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4489:4519   */\n      mstore\n      shl(0x92, 0x1a5b9d985b1a5908185b5bdd5b9d)\n        /* \"#utility.yul\":4535:4553   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4528:4572   */\n      mstore\n        /* \"#utility.yul\":4589:4607   */\n      0x64\n      add\n        /* \"pegged-token.sol\":9972:10006  require(amount>0,\"invalid amount\") */\n      tag_99\n        /* \"#utility.yul\":4275:4613   */\n      jump\n        /* \"pegged-token.sol\":9972:10006  require(amount>0,\"invalid amount\") */\n    tag_126:\n        /* \"pegged-token.sol\":10012:10034  _mint(account, amount) */\n      tag_104\n        /* \"pegged-token.sol\":10018:10025  account */\n      dup4\n        /* \"pegged-token.sol\":10027:10033  amount */\n      dup4\n        /* \"pegged-token.sol\":10012:10017  _mint */\n      tag_130\n        /* \"pegged-token.sol\":10012:10034  _mint(account, amount) */\n      jump\t// in\n        /* \"pegged-token.sol\":6024:6151  function renounceOwnership() public onlyOwner {... */\n    tag_58:\n        /* \"pegged-token.sol\":5627:5633  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"pegged-token.sol\":3702:3712  msg.sender */\n      caller\n        /* \"pegged-token.sol\":5627:5649  _owner == _msgSender() */\n      eq\n        /* \"pegged-token.sol\":5619:5686  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_134:\n        /* \"pegged-token.sol\":6118:6119  0 */\n      0x00\n        /* \"pegged-token.sol\":6102:6108  _owner */\n      dup1\n      sload\n        /* \"pegged-token.sol\":6081:6121  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":6102:6108  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"pegged-token.sol\":6081:6121  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"pegged-token.sol\":6118:6119  0 */\n      dup4\n      swap1\n        /* \"pegged-token.sol\":6081:6121  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"pegged-token.sol\":6144:6145  0 */\n      0x00\n        /* \"pegged-token.sol\":6127:6146  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"pegged-token.sol\":6024:6151  function renounceOwnership() public onlyOwner {... */\n      jump\t// out\n        /* \"pegged-token.sol\":7704:7785  function symbol() external view returns (string memory) {... */\n    tag_67:\n        /* \"pegged-token.sol\":7745:7758  string memory */\n      0x60\n        /* \"pegged-token.sol\":7773:7780  _symbol */\n      0x05\n        /* \"pegged-token.sol\":7766:7780  return _symbol */\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n        /* \"pegged-token.sol\":10136:10361  function burn(address account ,uint256 amount) public onlyDepositor returns (bool) {... */\n    tag_71:\n        /* \"pegged-token.sol\":7237:7247  _depositor */\n      sload(0x07)\n        /* \"pegged-token.sol\":10213:10217  bool */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":7237:7247  _depositor */\n      and\n        /* \"pegged-token.sol\":3702:3712  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":7221:7247  _msgSender() == _depositor */\n      and\n      eq\n        /* \"pegged-token.sol\":7213:7279  require(_msgSender() == _depositor, \"caller is not the depositor\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3777:3779   */\n      0x20\n        /* \"pegged-token.sol\":7213:7279  require(_msgSender() == _depositor, \"caller is not the depositor\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3759:3780   */\n      mstore\n        /* \"#utility.yul\":3816:3818   */\n      0x1b\n        /* \"#utility.yul\":3796:3814   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3789:3819   */\n      mstore\n        /* \"#utility.yul\":3855:3884   */\n      0x63616c6c6572206973206e6f7420746865206465706f7369746f720000000000\n        /* \"#utility.yul\":3835:3853   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3828:3885   */\n      mstore\n        /* \"#utility.yul\":3902:3920   */\n      0x64\n      add\n        /* \"pegged-token.sol\":7213:7279  require(_msgSender() == _depositor, \"caller is not the depositor\") */\n      tag_99\n        /* \"#utility.yul\":3575:3926   */\n      jump\n        /* \"pegged-token.sol\":7213:7279  require(_msgSender() == _depositor, \"caller is not the depositor\") */\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":10233:10252  account!=address(0) */\n      dup4\n      and\n        /* \"pegged-token.sol\":10225:10271  require(account!=address(0),\"invalid account\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4133:4135   */\n      0x20\n        /* \"pegged-token.sol\":10225:10271  require(account!=address(0),\"invalid account\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4115:4136   */\n      mstore\n        /* \"#utility.yul\":4172:4174   */\n      0x0f\n        /* \"#utility.yul\":4152:4170   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4145:4175   */\n      mstore\n      shl(0x8a, 0x1a5b9d985b1a59081858d8dbdd5b9d)\n        /* \"#utility.yul\":4191:4209   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4184:4229   */\n      mstore\n        /* \"#utility.yul\":4246:4264   */\n      0x64\n      add\n        /* \"pegged-token.sol\":10225:10271  require(account!=address(0),\"invalid account\") */\n      tag_99\n        /* \"#utility.yul\":3931:4270   */\n      jump\n        /* \"pegged-token.sol\":10225:10271  require(account!=address(0),\"invalid account\") */\n    tag_151:\n        /* \"pegged-token.sol\":10292:10293  0 */\n      0x00\n        /* \"pegged-token.sol\":10285:10291  amount */\n      dup3\n        /* \"pegged-token.sol\":10285:10293  amount>0 */\n      gt\n        /* \"pegged-token.sol\":10277:10311  require(amount>0,\"invalid amount\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4477:4479   */\n      0x20\n        /* \"pegged-token.sol\":10277:10311  require(amount>0,\"invalid amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4459:4480   */\n      mstore\n        /* \"#utility.yul\":4516:4518   */\n      0x0e\n        /* \"#utility.yul\":4496:4514   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4489:4519   */\n      mstore\n      shl(0x92, 0x1a5b9d985b1a5908185b5bdd5b9d)\n        /* \"#utility.yul\":4535:4553   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4528:4572   */\n      mstore\n        /* \"#utility.yul\":4589:4607   */\n      0x64\n      add\n        /* \"pegged-token.sol\":10277:10311  require(amount>0,\"invalid amount\") */\n      tag_99\n        /* \"#utility.yul\":4275:4613   */\n      jump\n        /* \"pegged-token.sol\":10277:10311  require(amount>0,\"invalid amount\") */\n    tag_153:\n        /* \"pegged-token.sol\":10317:10339  _burn(account, amount) */\n      tag_104\n        /* \"pegged-token.sol\":10323:10330  account */\n      dup4\n        /* \"pegged-token.sol\":10332:10338  amount */\n      dup4\n        /* \"pegged-token.sol\":10317:10322  _burn */\n      tag_156\n        /* \"pegged-token.sol\":10317:10339  _burn(account, amount) */\n      jump\t// in\n        /* \"pegged-token.sol\":8383:8530  function transfer(address recipient, uint256 amount) external returns (bool) {... */\n    tag_75:\n        /* \"pegged-token.sol\":8454:8458  bool */\n      0x00\n        /* \"pegged-token.sol\":8466:8508  _transfer(_msgSender(), recipient, amount) */\n      tag_104\n        /* \"pegged-token.sol\":3702:3712  msg.sender */\n      caller\n        /* \"pegged-token.sol\":8490:8499  recipient */\n      dup5\n        /* \"pegged-token.sol\":8501:8507  amount */\n      dup5\n        /* \"pegged-token.sol\":8466:8475  _transfer */\n      tag_110\n        /* \"pegged-token.sol\":8466:8508  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"pegged-token.sol\":7295:7388  function setDepositor(address depositor) external onlyOwner {... */\n    tag_84:\n        /* \"pegged-token.sol\":5627:5633  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"pegged-token.sol\":3702:3712  msg.sender */\n      caller\n        /* \"pegged-token.sol\":5627:5649  _owner == _msgSender() */\n      eq\n        /* \"pegged-token.sol\":5619:5686  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_163:\n        /* \"pegged-token.sol\":7361:7371  _depositor */\n      0x07\n        /* \"pegged-token.sol\":7361:7383  _depositor = depositor */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"pegged-token.sol\":7295:7388  function setDepositor(address depositor) external onlyOwner {... */\n      jump\t// out\n        /* \"pegged-token.sol\":6290:6391  function transferOwnership(address newOwner) public onlyOwner {... */\n    tag_87:\n        /* \"pegged-token.sol\":5627:5633  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"pegged-token.sol\":3702:3712  msg.sender */\n      caller\n        /* \"pegged-token.sol\":5627:5649  _owner == _msgSender() */\n      eq\n        /* \"pegged-token.sol\":5619:5686  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_168:\n        /* \"pegged-token.sol\":6358:6386  _transferOwnership(newOwner) */\n      tag_171\n        /* \"pegged-token.sol\":6377:6385  newOwner */\n      dup2\n        /* \"pegged-token.sol\":6358:6376  _transferOwnership */\n      tag_172\n        /* \"pegged-token.sol\":6358:6386  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_171:\n        /* \"pegged-token.sol\":6290:6391  function transferOwnership(address newOwner) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"pegged-token.sol\":12699:13013  function _approve(address owner, address spender, uint256 amount) internal {... */\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":12788:12807  owner != address(0) */\n      dup4\n      and\n        /* \"pegged-token.sol\":12780:12848  require(owner != address(0), \"ZRC20: approve from the zero address\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4820:4822   */\n      0x20\n        /* \"pegged-token.sol\":12780:12848  require(owner != address(0), \"ZRC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4802:4823   */\n      mstore\n        /* \"#utility.yul\":4859:4861   */\n      0x24\n        /* \"#utility.yul\":4839:4857   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4832:4862   */\n      mstore\n        /* \"#utility.yul\":4898:4932   */\n      0x5a524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4878:4896   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4871:4933   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4949:4967   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4942:4976   */\n      mstore\n        /* \"#utility.yul\":4993:5012   */\n      0x84\n      add\n        /* \"pegged-token.sol\":12780:12848  require(owner != address(0), \"ZRC20: approve from the zero address\") */\n      tag_99\n        /* \"#utility.yul\":4618:5018   */\n      jump\n        /* \"pegged-token.sol\":12780:12848  require(owner != address(0), \"ZRC20: approve from the zero address\") */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":12862:12883  spender != address(0) */\n      dup3\n      and\n        /* \"pegged-token.sol\":12854:12922  require(spender != address(0), \"ZRC20: approve to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5225:5227   */\n      0x20\n        /* \"pegged-token.sol\":12854:12922  require(spender != address(0), \"ZRC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5207:5228   */\n      mstore\n        /* \"#utility.yul\":5264:5266   */\n      0x22\n        /* \"#utility.yul\":5244:5262   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5237:5267   */\n      mstore\n        /* \"#utility.yul\":5303:5337   */\n      0x5a524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":5283:5301   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5276:5338   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":5354:5372   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5347:5379   */\n      mstore\n        /* \"#utility.yul\":5396:5415   */\n      0x84\n      add\n        /* \"pegged-token.sol\":12854:12922  require(spender != address(0), \"ZRC20: approve to the zero address\") */\n      tag_99\n        /* \"#utility.yul\":5023:5421   */\n      jump\n        /* \"pegged-token.sol\":12854:12922  require(spender != address(0), \"ZRC20: approve to the zero address\") */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":12929:12947  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"pegged-token.sol\":12929:12940  _allowances */\n      0x02\n        /* \"pegged-token.sol\":12929:12947  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"pegged-token.sol\":12929:12956  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"pegged-token.sol\":12929:12965  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"pegged-token.sol\":12976:13008  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"pegged-token.sol\":12976:13008  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"pegged-token.sol\":12976:13008  Approval(owner, spender, amount) */\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"pegged-token.sol\":12699:13013  function _approve(address owner, address spender, uint256 amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"pegged-token.sol\":10805:11199  function _transfer(address sender, address recipient, uint256 amount) internal {... */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":10898:10918  sender != address(0) */\n      dup4\n      and\n        /* \"pegged-token.sol\":10890:10960  require(sender != address(0), \"ZRC20: transfer from the zero address\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5628:5630   */\n      0x20\n        /* \"pegged-token.sol\":10890:10960  require(sender != address(0), \"ZRC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5610:5631   */\n      mstore\n        /* \"#utility.yul\":5667:5669   */\n      0x25\n        /* \"#utility.yul\":5647:5665   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5640:5670   */\n      mstore\n        /* \"#utility.yul\":5706:5740   */\n      0x5a524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5686:5704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5679:5741   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5757:5775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5750:5785   */\n      mstore\n        /* \"#utility.yul\":5802:5821   */\n      0x84\n      add\n        /* \"pegged-token.sol\":10890:10960  require(sender != address(0), \"ZRC20: transfer from the zero address\") */\n      tag_99\n        /* \"#utility.yul\":5426:5827   */\n      jump\n        /* \"pegged-token.sol\":10890:10960  require(sender != address(0), \"ZRC20: transfer from the zero address\") */\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":10974:10997  recipient != address(0) */\n      dup3\n      and\n        /* \"pegged-token.sol\":10966:11037  require(recipient != address(0), \"ZRC20: transfer to the zero address\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6034:6036   */\n      0x20\n        /* \"pegged-token.sol\":10966:11037  require(recipient != address(0), \"ZRC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6016:6037   */\n      mstore\n        /* \"#utility.yul\":6073:6075   */\n      0x23\n        /* \"#utility.yul\":6053:6071   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6046:6076   */\n      mstore\n        /* \"#utility.yul\":6112:6146   */\n      0x5a524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6092:6110   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6085:6147   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":6163:6181   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6156:6189   */\n      mstore\n        /* \"#utility.yul\":6206:6225   */\n      0x84\n      add\n        /* \"pegged-token.sol\":10966:11037  require(recipient != address(0), \"ZRC20: transfer to the zero address\") */\n      tag_99\n        /* \"#utility.yul\":5832:6231   */\n      jump\n        /* \"pegged-token.sol\":10966:11037  require(recipient != address(0), \"ZRC20: transfer to the zero address\") */\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":11064:11081  _balances[sender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"pegged-token.sol\":11064:11073  _balances */\n      0x01\n        /* \"pegged-token.sol\":11064:11081  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"pegged-token.sol\":11064:11090  _balances[sender] - amount */\n      tag_189\n      swap1\n        /* \"pegged-token.sol\":11084:11090  amount */\n      dup3\n      swap1\n        /* \"pegged-token.sol\":11064:11090  _balances[sender] - amount */\n      tag_115\n      jump\t// in\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":11044:11061  _balances[sender] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"pegged-token.sol\":11044:11053  _balances */\n      0x01\n        /* \"pegged-token.sol\":11044:11061  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"pegged-token.sol\":11044:11090  _balances[sender] = _balances[sender] - amount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"pegged-token.sol\":11119:11139  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"pegged-token.sol\":11119:11148  _balances[recipient] + amount */\n      tag_190\n      swap1\n        /* \"pegged-token.sol\":11142:11148  amount */\n      dup3\n      swap1\n        /* \"pegged-token.sol\":11119:11148  _balances[recipient] + amount */\n      tag_191\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":11096:11116  _balances[recipient] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"pegged-token.sol\":11096:11105  _balances */\n      0x01\n        /* \"pegged-token.sol\":11096:11116  _balances[recipient] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"pegged-token.sol\":11096:11148  _balances[recipient] = _balances[recipient] + amount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"pegged-token.sol\":11159:11194  Transfer(sender, recipient, amount) */\n      swap2\n      mload\n      swap1\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_181\n      swap1\n        /* \"pegged-token.sol\":11187:11193  amount */\n      dup6\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"pegged-token.sol\":11449:11727  function _mint(address account, uint256 amount) internal {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":11520:11541  account != address(0) */\n      dup3\n      and\n        /* \"pegged-token.sol\":11512:11577  require(account != address(0), \"ZRC20: mint to the zero address\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6568:6570   */\n      0x20\n        /* \"pegged-token.sol\":11512:11577  require(account != address(0), \"ZRC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6550:6571   */\n      mstore\n        /* \"#utility.yul\":6607:6609   */\n      0x1f\n        /* \"#utility.yul\":6587:6605   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6580:6610   */\n      mstore\n        /* \"#utility.yul\":6646:6679   */\n      0x5a524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":6626:6644   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6619:6680   */\n      mstore\n        /* \"#utility.yul\":6697:6715   */\n      0x64\n      add\n        /* \"pegged-token.sol\":11512:11577  require(account != address(0), \"ZRC20: mint to the zero address\") */\n      tag_99\n        /* \"#utility.yul\":6366:6721   */\n      jump\n        /* \"pegged-token.sol\":11512:11577  require(account != address(0), \"ZRC20: mint to the zero address\") */\n    tag_194:\n        /* \"pegged-token.sol\":11614:11620  amount */\n      dup1\n        /* \"pegged-token.sol\":11599:11611  _totalSupply */\n      sload(0x03)\n        /* \"pegged-token.sol\":11599:11620  _totalSupply + amount */\n      tag_197\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_197:\n        /* \"pegged-token.sol\":11584:11596  _totalSupply */\n      0x03\n        /* \"pegged-token.sol\":11584:11620  _totalSupply = _totalSupply + amount */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":11647:11665  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"pegged-token.sol\":11647:11656  _balances */\n      0x01\n        /* \"pegged-token.sol\":11647:11665  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"pegged-token.sol\":11647:11674  _balances[account] + amount */\n      tag_198\n      swap1\n        /* \"pegged-token.sol\":11668:11674  amount */\n      dup3\n      swap1\n        /* \"pegged-token.sol\":11647:11674  _balances[account] + amount */\n      tag_191\n      jump\t// in\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":11626:11644  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"pegged-token.sol\":11626:11635  _balances */\n      0x01\n        /* \"pegged-token.sol\":11626:11644  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"pegged-token.sol\":11626:11674  _balances[account] = _balances[account] + amount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"pegged-token.sol\":11685:11722  Transfer(address(0), account, amount) */\n      swap2\n      mload\n        /* \"pegged-token.sol\":11626:11644  _balances[account] */\n      swap1\n      swap2\n      swap1\n        /* \"pegged-token.sol\":11685:11722  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_199\n      swap1\n        /* \"pegged-token.sol\":11715:11721  amount */\n      dup6\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"pegged-token.sol\":11685:11722  Transfer(address(0), account, amount) */\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"pegged-token.sol\":11449:11727  function _mint(address account, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"pegged-token.sol\":12022:12302  function _burn(address account, uint256 amount) internal {... */\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":12093:12114  account != address(0) */\n      dup3\n      and\n        /* \"pegged-token.sol\":12085:12152  require(account != address(0), \"ZRC20: burn from the zero address\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6928:6930   */\n      0x20\n        /* \"pegged-token.sol\":12085:12152  require(account != address(0), \"ZRC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6910:6931   */\n      mstore\n        /* \"#utility.yul\":6967:6969   */\n      0x21\n        /* \"#utility.yul\":6947:6965   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6940:6970   */\n      mstore\n        /* \"#utility.yul\":7006:7040   */\n      0x5a524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":6986:7004   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6979:7041   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":7057:7075   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7050:7081   */\n      mstore\n        /* \"#utility.yul\":7098:7117   */\n      0x84\n      add\n        /* \"pegged-token.sol\":12085:12152  require(account != address(0), \"ZRC20: burn from the zero address\") */\n      tag_99\n        /* \"#utility.yul\":6726:7123   */\n      jump\n        /* \"pegged-token.sol\":12085:12152  require(account != address(0), \"ZRC20: burn from the zero address\") */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":12180:12198  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"pegged-token.sol\":12180:12189  _balances */\n      0x01\n        /* \"pegged-token.sol\":12180:12198  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"pegged-token.sol\":12180:12207  _balances[account] - amount */\n      tag_204\n      swap1\n        /* \"pegged-token.sol\":12201:12207  amount */\n      dup3\n      swap1\n        /* \"pegged-token.sol\":12180:12207  _balances[account] - amount */\n      tag_115\n      jump\t// in\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":12159:12177  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"pegged-token.sol\":12159:12168  _balances */\n      0x01\n        /* \"pegged-token.sol\":12159:12177  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"pegged-token.sol\":12159:12207  _balances[account] = _balances[account] - amount */\n      sstore\n        /* \"pegged-token.sol\":12228:12240  _totalSupply */\n      sload(0x03)\n        /* \"pegged-token.sol\":12228:12249  _totalSupply - amount */\n      tag_205\n      swap1\n        /* \"pegged-token.sol\":12243:12249  amount */\n      dup3\n      swap1\n        /* \"pegged-token.sol\":12228:12249  _totalSupply - amount */\n      tag_115\n      jump\t// in\n    tag_205:\n        /* \"pegged-token.sol\":12213:12225  _totalSupply */\n      0x03\n        /* \"pegged-token.sol\":12213:12249  _totalSupply = _totalSupply - amount */\n      sstore\n        /* \"pegged-token.sol\":12260:12297  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      dup2\n      mstore\n        /* \"pegged-token.sol\":12286:12287  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":12260:12297  Transfer(account, address(0), amount) */\n      dup5\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"pegged-token.sol\":12260:12297  Transfer(account, address(0), amount) */\n      tag_199\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"pegged-token.sol\":6484:6695  function _transferOwnership(address newOwner) internal {... */\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"pegged-token.sol\":6553:6575  newOwner != address(0) */\n      dup2\n      and\n        /* \"pegged-token.sol\":6545:6618  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7330:7332   */\n      0x20\n        /* \"pegged-token.sol\":6545:6618  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7312:7333   */\n      mstore\n        /* \"#utility.yul\":7369:7371   */\n      0x26\n        /* \"#utility.yul\":7349:7367   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7342:7372   */\n      mstore\n        /* \"#utility.yul\":7408:7442   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7388:7406   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7381:7443   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7459:7477   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7452:7488   */\n      mstore\n        /* \"#utility.yul\":7505:7524   */\n      0x84\n      add\n        /* \"pegged-token.sol\":6545:6618  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_99\n        /* \"#utility.yul\":7128:7530   */\n      jump\n        /* \"pegged-token.sol\":6545:6618  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_208:\n        /* \"pegged-token.sol\":6650:6656  _owner */\n      0x00\n      dup1\n      sload\n        /* \"pegged-token.sol\":6629:6667  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"pegged-token.sol\":6650:6656  _owner */\n      swap3\n      and\n      swap2\n        /* \"pegged-token.sol\":6629:6667  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"pegged-token.sol\":6673:6679  _owner */\n      0x00\n        /* \"pegged-token.sol\":6673:6690  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"pegged-token.sol\":6484:6695  function _transferOwnership(address newOwner) internal {... */\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_26:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_215:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_215)\n    tag_217:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_211:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_219:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_31:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_221:\n        /* \"#utility.yul\":913:942   */\n      tag_222\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_211\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_41:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_226:\n        /* \"#utility.yul\":1563:1592   */\n      tag_227\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_211\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_228\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_211\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_54:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_231:\n        /* \"#utility.yul\":2051:2080   */\n      tag_232\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_211\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2299:2559   */\n    tag_79:\n        /* \"#utility.yul\":2367:2373   */\n      0x00\n        /* \"#utility.yul\":2375:2381   */\n      dup1\n        /* \"#utility.yul\":2428:2430   */\n      0x40\n        /* \"#utility.yul\":2416:2425   */\n      dup4\n        /* \"#utility.yul\":2407:2414   */\n      dup6\n        /* \"#utility.yul\":2403:2426   */\n      sub\n        /* \"#utility.yul\":2399:2431   */\n      slt\n        /* \"#utility.yul\":2396:2448   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":2444:2445   */\n      0x00\n        /* \"#utility.yul\":2441:2442   */\n      dup1\n        /* \"#utility.yul\":2434:2446   */\n      revert\n        /* \"#utility.yul\":2396:2448   */\n    tag_235:\n        /* \"#utility.yul\":2467:2496   */\n      tag_236\n        /* \"#utility.yul\":2486:2495   */\n      dup4\n        /* \"#utility.yul\":2467:2496   */\n      tag_211\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":2457:2496   */\n      swap2\n      pop\n        /* \"#utility.yul\":2515:2553   */\n      tag_237\n        /* \"#utility.yul\":2549:2551   */\n      0x20\n        /* \"#utility.yul\":2538:2547   */\n      dup5\n        /* \"#utility.yul\":2534:2552   */\n      add\n        /* \"#utility.yul\":2515:2553   */\n      tag_211\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":2505:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2299:2559   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2564:2944   */\n    tag_90:\n        /* \"#utility.yul\":2643:2644   */\n      0x01\n        /* \"#utility.yul\":2639:2651   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2686:2698   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2707:2768   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":2761:2765   */\n      0x7f\n        /* \"#utility.yul\":2753:2759   */\n      dup3\n        /* \"#utility.yul\":2749:2766   */\n      and\n        /* \"#utility.yul\":2739:2766   */\n      swap2\n      pop\n        /* \"#utility.yul\":2707:2768   */\n    tag_239:\n        /* \"#utility.yul\":2814:2816   */\n      0x20\n        /* \"#utility.yul\":2806:2812   */\n      dup3\n        /* \"#utility.yul\":2803:2817   */\n      lt\n        /* \"#utility.yul\":2783:2801   */\n      dup2\n        /* \"#utility.yul\":2780:2818   */\n      sub\n        /* \"#utility.yul\":2777:2938   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":2860:2870   */\n      0x4e487b71\n        /* \"#utility.yul\":2855:2858   */\n      0xe0\n        /* \"#utility.yul\":2851:2871   */\n      shl\n        /* \"#utility.yul\":2848:2849   */\n      0x00\n        /* \"#utility.yul\":2841:2872   */\n      mstore\n        /* \"#utility.yul\":2895:2899   */\n      0x22\n        /* \"#utility.yul\":2892:2893   */\n      0x04\n        /* \"#utility.yul\":2885:2900   */\n      mstore\n        /* \"#utility.yul\":2923:2927   */\n      0x24\n        /* \"#utility.yul\":2920:2921   */\n      0x00\n        /* \"#utility.yul\":2913:2928   */\n      revert\n        /* \"#utility.yul\":2777:2938   */\n    tag_240:\n      pop\n        /* \"#utility.yul\":2564:2944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2949:3305   */\n    tag_100:\n        /* \"#utility.yul\":3151:3153   */\n      0x20\n        /* \"#utility.yul\":3133:3154   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3170:3188   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3163:3193   */\n      mstore\n        /* \"#utility.yul\":3229:3263   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3224:3226   */\n      0x40\n        /* \"#utility.yul\":3209:3227   */\n      dup3\n      add\n        /* \"#utility.yul\":3202:3264   */\n      mstore\n        /* \"#utility.yul\":3296:3298   */\n      0x60\n        /* \"#utility.yul\":3281:3299   */\n      add\n      swap1\n        /* \"#utility.yul\":2949:3305   */\n      jump\t// out\n        /* \"#utility.yul\":3310:3437   */\n    tag_212:\n        /* \"#utility.yul\":3371:3381   */\n      0x4e487b71\n        /* \"#utility.yul\":3366:3369   */\n      0xe0\n        /* \"#utility.yul\":3362:3382   */\n      shl\n        /* \"#utility.yul\":3359:3360   */\n      0x00\n        /* \"#utility.yul\":3352:3383   */\n      mstore\n        /* \"#utility.yul\":3402:3406   */\n      0x11\n        /* \"#utility.yul\":3399:3400   */\n      0x04\n        /* \"#utility.yul\":3392:3407   */\n      mstore\n        /* \"#utility.yul\":3426:3430   */\n      0x24\n        /* \"#utility.yul\":3423:3424   */\n      0x00\n        /* \"#utility.yul\":3416:3431   */\n      revert\n        /* \"#utility.yul\":3442:3570   */\n    tag_115:\n        /* \"#utility.yul\":3509:3518   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3530:3541   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3527:3564   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":3544:3562   */\n      tag_103\n      tag_212\n      jump\t// in\n        /* \"#utility.yul\":6236:6361   */\n    tag_191:\n        /* \"#utility.yul\":6301:6310   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6322:6332   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6319:6355   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":6335:6353   */\n      tag_103\n      tag_212\n      jump\t// in\n\n    auxdata: 0xa264697066735822122099db7c272cd31b919dfbd18552ae91cee2fcb8fe1d94a578380966e2c2538e7064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_104": {
									"entryPoint": null,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_161": {
									"entryPoint": null,
									"id": 161,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_297": {
									"entryPoint": null,
									"id": 297,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2914:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:1",
																			"statements": []
																		},
																		"src": "1104:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nodeType": "YulIf",
															"src": "748:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:1",
														"type": ""
													}
												],
												"src": "1207:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:1"
															},
															"nodeType": "YulIf",
															"src": "1517:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:1",
																					"statements": []
																				},
																				"src": "1964:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:1",
														"type": ""
													}
												],
												"src": "1378:1352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2836:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2846:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2858:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2869:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2854:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2846:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2888:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2899:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2881:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2881:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2881:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2805:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2816:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2827:4:1",
														"type": ""
													}
												],
												"src": "2735:177:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060408051808201909152601b81527f4d61696e6e65745a20506567676564207a5553445420546f6b656e00000000006020820152600690620000969082620001bd565b50604080518082019091526005808252641e9554d11560da1b602083015290620000c19082620001bd565b506004805460ff1916601217905560035460405133916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef916200010a9190815260200190565b60405180910390a362000289565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014357607f821691505b6020821081036200016457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b857600081815260208120601f850160051c81016020861015620001935750805b601f850160051c820191505b81811015620001b4578281556001016200019f565b5050505b505050565b81516001600160401b03811115620001d957620001d962000118565b620001f181620001ea84546200012e565b846200016a565b602080601f831160018114620002295760008415620002105750858301515b600019600386901b1c1916600185901b178555620001b4565b600085815260208120601f198616915b828110156200025a5788860151825594840194600190910190840162000239565b5085821015620002795787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610dfe80620002996000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a25780639dc29fac116100715780639dc29fac14610217578063a9059cbb1461022a578063dd62ed3e1461023d578063f2c098b714610276578063f2fde38b1461028957600080fd5b8063715018a6146101d1578063893d20e8146101d95780638da5cb5b146101fe57806395d89b411461020f57600080fd5b806323b872dd116100de57806323b872dd1461016d578063313ce5671461018057806340c10f191461019557806370a08231146101a857600080fd5b806306fdde0314610110578063092a5cce1461012e578063095ea7b31461013857806318160ddd1461015b575b600080fd5b61011861029c565b6040516101259190610bf8565b60405180910390f35b61013661032e565b005b61014b610146366004610c62565b610364565b6040519015158152602001610125565b6003545b604051908152602001610125565b61014b61017b366004610c8c565b61037b565b60045460405160ff9091168152602001610125565b61014b6101a3366004610c62565b6103cd565b61015f6101b6366004610cc8565b6001600160a01b031660009081526001602052604090205490565b6101366104c6565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610125565b6000546001600160a01b03166101e6565b61011861053a565b61014b610225366004610c62565b610549565b61014b610238366004610c62565b610642565b61015f61024b366004610cea565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610136610284366004610cc8565b61064f565b610136610297366004610cc8565b61069b565b6060600680546102ab90610d1d565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790610d1d565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000546001600160a01b031633146103615760405162461bcd60e51b815260040161035890610d57565b60405180910390fd5b33ff5b60006103713384846106d1565b5060015b92915050565b60006103888484846107f6565b6001600160a01b0384166000908152600260209081526040808320338085529252909120546103c39186916103be908690610da2565b6106d1565b5060019392505050565b6007546000906001600160a01b0316336001600160a01b0316146104335760405162461bcd60e51b815260206004820152601b60248201527f63616c6c6572206973206e6f7420746865206465706f7369746f7200000000006044820152606401610358565b6001600160a01b03831661047b5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9d985b1a59081858d8dbdd5b9d608a1b6044820152606401610358565b600082116104bc5760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b6044820152606401610358565b6103718383610964565b6000546001600160a01b031633146104f05760405162461bcd60e51b815260040161035890610d57565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6060600580546102ab90610d1d565b6007546000906001600160a01b0316336001600160a01b0316146105af5760405162461bcd60e51b815260206004820152601b60248201527f63616c6c6572206973206e6f7420746865206465706f7369746f7200000000006044820152606401610358565b6001600160a01b0383166105f75760405162461bcd60e51b815260206004820152600f60248201526e1a5b9d985b1a59081858d8dbdd5b9d608a1b6044820152606401610358565b600082116106385760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b6044820152606401610358565b6103718383610a4c565b60006103713384846107f6565b6000546001600160a01b031633146106795760405162461bcd60e51b815260040161035890610d57565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146106c55760405162461bcd60e51b815260040161035890610d57565b6106ce81610b38565b50565b6001600160a01b0383166107335760405162461bcd60e51b8152602060048201526024808201527f5a524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610358565b6001600160a01b0382166107945760405162461bcd60e51b815260206004820152602260248201527f5a524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610358565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661085a5760405162461bcd60e51b815260206004820152602560248201527f5a524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610358565b6001600160a01b0382166108bc5760405162461bcd60e51b815260206004820152602360248201527f5a524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610358565b6001600160a01b0383166000908152600160205260409020546108e0908290610da2565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610910908290610db5565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107e99085815260200190565b6001600160a01b0382166109ba5760405162461bcd60e51b815260206004820152601f60248201527f5a524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610358565b806003546109c89190610db5565b6003556001600160a01b0382166000908152600160205260409020546109ef908290610db5565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610a409085815260200190565b60405180910390a35050565b6001600160a01b038216610aac5760405162461bcd60e51b815260206004820152602160248201527f5a524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610358565b6001600160a01b038216600090815260016020526040902054610ad0908290610da2565b6001600160a01b038316600090815260016020526040902055600354610af7908290610da2565b6003556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610a40565b6001600160a01b038116610b9d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610358565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600060208083528351808285015260005b81811015610c2557858101830151858201604001528201610c09565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c5d57600080fd5b919050565b60008060408385031215610c7557600080fd5b610c7e83610c46565b946020939093013593505050565b600080600060608486031215610ca157600080fd5b610caa84610c46565b9250610cb860208501610c46565b9150604084013590509250925092565b600060208284031215610cda57600080fd5b610ce382610c46565b9392505050565b60008060408385031215610cfd57600080fd5b610d0683610c46565b9150610d1460208401610c46565b90509250929050565b600181811c90821680610d3157607f821691505b602082108103610d5157634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561037557610375610d8c565b8082018082111561037557610375610d8c56fea264697066735822122099db7c272cd31b919dfbd18552ae91cee2fcb8fe1d94a578380966e2c2538e7064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH32 0x4D61696E6E65745A20506567676564207A5553445420546F6B656E0000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x6 SWAP1 PUSH3 0x96 SWAP1 DUP3 PUSH3 0x1BD JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP1 DUP3 MSTORE PUSH5 0x1E9554D115 PUSH1 0xDA SHL PUSH1 0x20 DUP4 ADD MSTORE SWAP1 PUSH3 0xC1 SWAP1 DUP3 PUSH3 0x1BD JUMP JUMPDEST POP PUSH1 0x4 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD CALLER SWAP2 PUSH1 0x0 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 PUSH3 0x10A SWAP2 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x289 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x143 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x164 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1B8 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x193 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1B4 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x19F JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1D9 JUMPI PUSH3 0x1D9 PUSH3 0x118 JUMP JUMPDEST PUSH3 0x1F1 DUP2 PUSH3 0x1EA DUP5 SLOAD PUSH3 0x12E JUMP JUMPDEST DUP5 PUSH3 0x16A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x229 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x210 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1B4 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x25A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x239 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x279 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xDFE DUP1 PUSH3 0x299 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xF2C098B7 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x92A5CCE EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x32E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14B PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH2 0x15F PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x53A JUMP JUMPDEST PUSH2 0x14B PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0x64F JUMP JUMPDEST PUSH2 0x136 PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0xD1D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0xD1D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH2 0x371 CALLER DUP5 DUP5 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP5 DUP5 DUP5 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x3C3 SWAP2 DUP7 SWAP2 PUSH2 0x3BE SWAP1 DUP7 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206973206E6F7420746865206465706F7369746F720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081858D8DBDD5B9D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x4BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1A5B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST PUSH2 0x371 DUP4 DUP4 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206973206E6F7420746865206465706F7369746F720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081858D8DBDD5B9D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1A5B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST PUSH2 0x371 DUP4 DUP4 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x371 CALLER DUP5 DUP5 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x6CE DUP2 PUSH2 0xB38 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5A524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x794 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8E0 SWAP1 DUP3 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x910 SWAP1 DUP3 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x7E9 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST DUP1 PUSH1 0x3 SLOAD PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x9EF SWAP1 DUP3 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xA40 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xAD0 SWAP1 DUP3 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0xAF7 SWAP1 DUP3 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC25 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC09 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC7E DUP4 PUSH2 0xC46 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCAA DUP5 PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP PUSH2 0xCB8 PUSH1 0x20 DUP6 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE3 DUP3 PUSH2 0xC46 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD06 DUP4 PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP PUSH2 0xD14 PUSH1 0x20 DUP5 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD31 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD51 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x375 JUMPI PUSH2 0x375 PUSH2 0xD8C JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x375 JUMPI PUSH2 0x375 PUSH2 0xD8C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xDB PUSH29 0x272CD31B919DFBD18552AE91CEE2FCB8FE1D94A578380966E2C2538E70 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "6699:6432:0:-:0;;;7010:165;;;;;;;;;-1:-1:-1;5258:17:0;5296:18;;-1:-1:-1;;;;;;5296:18:0;3702:10;5296:18;;;;;5325:43;;3702:10;;;;5325:43;;5258:17;;5325:43;-1:-1:-1;7031:37:0;;;;;;;;;;;;;;;;;:5;;:37;;:5;:37;:::i;:::-;-1:-1:-1;7075:17:0;;;;;;;;;;;;;-1:-1:-1;;;7075:17:0;;;;;;;;;:::i;:::-;-1:-1:-1;7098:9:0;:14;;-1:-1:-1;;7098:14:0;7110:2;7098:14;;;7157:12;;7124:46;;7145:10;;7098:9;;7124:46;;;;2881:25:1;;;2869:2;2854:18;;2735:177;7124:46:0;;;;;;;;6699:6432;;14:127:1;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:1;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:1;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:1;;;2580:26;2531:89;-1:-1:-1;;1335:1:1;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:1;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:1;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:1;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:1:o;2735:177::-;6699:6432:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_736": {
									"entryPoint": 1745,
									"id": 736,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_691": {
									"entryPoint": 2636,
									"id": 691,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_647": {
									"entryPoint": 2404,
									"id": 647,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_244": {
									"entryPoint": 2872,
									"id": 244,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_603": {
									"entryPoint": 2038,
									"id": 603,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_417": {
									"entryPoint": null,
									"id": 417,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_437": {
									"entryPoint": 868,
									"id": 437,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_380": {
									"entryPoint": null,
									"id": 380,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_546": {
									"entryPoint": 1353,
									"id": 546,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@decimals_340": {
									"entryPoint": null,
									"id": 340,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@destroyContract_750": {
									"entryPoint": 814,
									"id": 750,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getOwner_331": {
									"entryPoint": null,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_509": {
									"entryPoint": 973,
									"id": 509,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_358": {
									"entryPoint": 668,
									"id": 358,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_170": {
									"entryPoint": null,
									"id": 170,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_205": {
									"entryPoint": 1222,
									"id": 205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDepositor_321": {
									"entryPoint": 1615,
									"id": 321,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_349": {
									"entryPoint": 1338,
									"id": 349,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_367": {
									"entryPoint": null,
									"id": 367,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_472": {
									"entryPoint": 891,
									"id": 472,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_218": {
									"entryPoint": 1691,
									"id": 218,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_400": {
									"entryPoint": 1602,
									"id": 400,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_00c78195edab24998ca9c2bf5e4ef3b2abff86c85e4d41adc167136dfa649256__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04df9072e74c338e42cdc362df69bbf62669d966c8515d22a52600cc21040feb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b35b1575e9cbca8c6549a597fa908d5f347c702d658e53d30245451711ba64a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f29340249770fa0769ce318b3b121c379b8a6b71b788bfc9ec0fe244c175a51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a71d2694bc6d2108aedf85dd0a70f7e700b05dc386eed9d5e52d1f6164cd7ca1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8b480bb39d2a21861f1e5f3a5be7d7d7f8db2e6678510bdc3a6a411edf96ae9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc86d182860676b82b7d43edae2df8eb2c3ae68d776f2e04b8c77a3eff5a3698__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d90a07aebca820f5ab8b30e947058a0c797639b66651be5f42963899002b481c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3468,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7532:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:1",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:1",
																"statements": []
															},
															"src": "294:140:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:548:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:1"
															},
															"nodeType": "YulIf",
															"src": "664:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:1",
														"type": ""
													}
												],
												"src": "567:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:1"
															},
															"nodeType": "YulIf",
															"src": "842:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:1",
														"type": ""
													}
												],
												"src": "745:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:1",
														"type": ""
													}
												],
												"src": "1004:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:1",
														"type": ""
													}
												],
												"src": "1196:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:1"
															},
															"nodeType": "YulIf",
															"src": "1492:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:1",
														"type": ""
													}
												],
												"src": "1378:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:1",
														"type": ""
													}
												],
												"src": "1711:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:1"
															},
															"nodeType": "YulIf",
															"src": "1980:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:1",
														"type": ""
													}
												],
												"src": "1900:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2192:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2202:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2214:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2225:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2210:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2210:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2202:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2244:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2259:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2275:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2280:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2271:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2271:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2284:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2267:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2267:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2255:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2255:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2237:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2237:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2237:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2161:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2172:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2183:4:1",
														"type": ""
													}
												],
												"src": "2091:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2432:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2441:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2444:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2434:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2434:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2434:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2407:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2416:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2403:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2428:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:32:1"
															},
															"nodeType": "YulIf",
															"src": "2396:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2457:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2486:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2467:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2457:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2505:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2549:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2534:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2515:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2515:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2505:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2344:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2355:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2367:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2375:6:1",
														"type": ""
													}
												],
												"src": "2299:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2619:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2629:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2643:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2646:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2639:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2639:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2629:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2660:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2690:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2696:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2686:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2686:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2664:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2737:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2739:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2753:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2749:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2749:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2739:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2717:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:26:1"
															},
															"nodeType": "YulIf",
															"src": "2707:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2827:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2848:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2855:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2860:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2851:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2851:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2841:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2841:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2841:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2892:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2895:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2885:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2885:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2885:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2920:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2923:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2913:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2913:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2913:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2783:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2814:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2803:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2803:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2780:38:1"
															},
															"nodeType": "YulIf",
															"src": "2777:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2599:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2608:6:1",
														"type": ""
													}
												],
												"src": "2564:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3140:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3151:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3133:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3133:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3133:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3174:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3185:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3170:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3170:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3190:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3163:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3163:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3163:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3213:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3224:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3209:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3209:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3229:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3202:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3202:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3202:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3273:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3285:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3296:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3281:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3273:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3100:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3114:4:1",
														"type": ""
													}
												],
												"src": "2949:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3342:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3371:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3362:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3362:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3352:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3399:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3402:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3392:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3392:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3392:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3423:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3426:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3416:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3416:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3416:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3310:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3491:79:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3501:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3513:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3516:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3509:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3509:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3501:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3542:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3544:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3544:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3544:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "3533:4:1"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3539:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3530:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3530:11:1"
															},
															"nodeType": "YulIf",
															"src": "3527:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3473:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3476:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3482:4:1",
														"type": ""
													}
												],
												"src": "3442:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3749:177:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3766:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3777:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3800:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3811:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3796:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3796:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3789:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3789:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3789:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3839:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3850:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3835:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3835:18:1"
																	},
																	{
																		"hexValue": "63616c6c6572206973206e6f7420746865206465706f7369746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3855:29:1",
																		"type": "",
																		"value": "caller is not the depositor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3828:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3828:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3828:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3894:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3906:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3917:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3902:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3902:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3894:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04df9072e74c338e42cdc362df69bbf62669d966c8515d22a52600cc21040feb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3726:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3740:4:1",
														"type": ""
													}
												],
												"src": "3575:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4105:165:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4122:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4133:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4115:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4115:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4115:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4167:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4152:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4172:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4145:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4145:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4145:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4195:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4206:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4191:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4191:18:1"
																	},
																	{
																		"hexValue": "696e76616c6964206163636f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4211:17:1",
																		"type": "",
																		"value": "invalid account"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4184:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4184:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4184:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4238:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4250:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4261:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4238:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d90a07aebca820f5ab8b30e947058a0c797639b66651be5f42963899002b481c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4082:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4096:4:1",
														"type": ""
													}
												],
												"src": "3931:339:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4449:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4466:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4477:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4459:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4459:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4459:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4500:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4511:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4496:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4496:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4516:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4489:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4489:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4489:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4539:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4550:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4535:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4535:18:1"
																	},
																	{
																		"hexValue": "696e76616c696420616d6f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4555:16:1",
																		"type": "",
																		"value": "invalid amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4528:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4528:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4528:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4581:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4593:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4604:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4589:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4581:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4426:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4440:4:1",
														"type": ""
													}
												],
												"src": "4275:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4792:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4809:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4820:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4802:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4802:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4802:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4843:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4854:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4839:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4839:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4859:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4832:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4832:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4832:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4882:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4893:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4878:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4878:18:1"
																	},
																	{
																		"hexValue": "5a524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4898:34:1",
																		"type": "",
																		"value": "ZRC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4871:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4871:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4871:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4953:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4964:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4949:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4949:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4969:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4942:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4942:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4985:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4997:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5008:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4993:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4993:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4985:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f29340249770fa0769ce318b3b121c379b8a6b71b788bfc9ec0fe244c175a51__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4769:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4783:4:1",
														"type": ""
													}
												],
												"src": "4618:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5197:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5214:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5225:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5207:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5207:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5248:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5259:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5244:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5244:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5264:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5237:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5237:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5237:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5287:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5298:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5283:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5283:18:1"
																	},
																	{
																		"hexValue": "5a524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5303:34:1",
																		"type": "",
																		"value": "ZRC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5276:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5276:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5276:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5358:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5369:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5354:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5354:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5374:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5347:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5347:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5347:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5388:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5400:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5411:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5396:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5396:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5388:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc86d182860676b82b7d43edae2df8eb2c3ae68d776f2e04b8c77a3eff5a3698__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5174:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5188:4:1",
														"type": ""
													}
												],
												"src": "5023:398:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5600:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5617:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5628:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5610:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5610:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5610:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5662:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5647:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5667:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5640:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5690:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5701:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5686:18:1"
																	},
																	{
																		"hexValue": "5a524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5706:34:1",
																		"type": "",
																		"value": "ZRC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5679:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5679:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5761:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5772:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5757:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5777:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5750:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5794:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5806:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5817:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5802:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5802:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5794:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a71d2694bc6d2108aedf85dd0a70f7e700b05dc386eed9d5e52d1f6164cd7ca1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5577:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5591:4:1",
														"type": ""
													}
												],
												"src": "5426:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6006:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6023:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6034:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6016:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6016:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6016:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6057:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6068:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6053:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6053:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6073:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6046:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6046:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6046:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6096:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6107:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6092:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6092:18:1"
																	},
																	{
																		"hexValue": "5a524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6112:34:1",
																		"type": "",
																		"value": "ZRC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6085:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6085:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6085:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6167:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6178:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6163:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6163:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6183:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6156:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6156:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6156:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6198:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6210:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6221:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6206:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6206:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6198:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b35b1575e9cbca8c6549a597fa908d5f347c702d658e53d30245451711ba64a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5983:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5997:4:1",
														"type": ""
													}
												],
												"src": "5832:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6284:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6294:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6305:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6308:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6301:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6301:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6294:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6333:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6335:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6335:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6335:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6325:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6328:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6322:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6322:10:1"
															},
															"nodeType": "YulIf",
															"src": "6319:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6267:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6270:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6276:3:1",
														"type": ""
													}
												],
												"src": "6236:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6540:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6557:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6568:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6550:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6550:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6550:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6591:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6602:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6587:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6587:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6607:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6580:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6580:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6580:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6630:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6641:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6626:18:1"
																	},
																	{
																		"hexValue": "5a524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6646:33:1",
																		"type": "",
																		"value": "ZRC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6619:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6619:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6619:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6689:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6701:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6712:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6689:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_00c78195edab24998ca9c2bf5e4ef3b2abff86c85e4d41adc167136dfa649256__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6517:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6531:4:1",
														"type": ""
													}
												],
												"src": "6366:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6900:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6917:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6928:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6910:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6910:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6910:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6951:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6962:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6947:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6947:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6967:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6940:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6940:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6990:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7001:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6986:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6986:18:1"
																	},
																	{
																		"hexValue": "5a524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7006:34:1",
																		"type": "",
																		"value": "ZRC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6979:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6979:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6979:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7061:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7072:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7057:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7057:18:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7077:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7050:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7050:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7090:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7102:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7113:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7098:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8b480bb39d2a21861f1e5f3a5be7d7d7f8db2e6678510bdc3a6a411edf96ae9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6877:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6891:4:1",
														"type": ""
													}
												],
												"src": "6726:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7302:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7319:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7330:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7312:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7312:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7312:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7353:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7364:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7349:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7349:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7369:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7392:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7403:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7388:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7388:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7408:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7381:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7381:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7381:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7463:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7474:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7459:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7479:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7452:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7452:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7452:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7497:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7509:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7520:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7505:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7497:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7279:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7293:4:1",
														"type": ""
													}
												],
												"src": "7128:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_04df9072e74c338e42cdc362df69bbf62669d966c8515d22a52600cc21040feb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"caller is not the depositor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d90a07aebca820f5ab8b30e947058a0c797639b66651be5f42963899002b481c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"invalid account\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"invalid amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f29340249770fa0769ce318b3b121c379b8a6b71b788bfc9ec0fe244c175a51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ZRC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc86d182860676b82b7d43edae2df8eb2c3ae68d776f2e04b8c77a3eff5a3698__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ZRC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a71d2694bc6d2108aedf85dd0a70f7e700b05dc386eed9d5e52d1f6164cd7ca1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ZRC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1b35b1575e9cbca8c6549a597fa908d5f347c702d658e53d30245451711ba64a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ZRC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_00c78195edab24998ca9c2bf5e4ef3b2abff86c85e4d41adc167136dfa649256__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ZRC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c8b480bb39d2a21861f1e5f3a5be7d7d7f8db2e6678510bdc3a6a411edf96ae9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ZRC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a25780639dc29fac116100715780639dc29fac14610217578063a9059cbb1461022a578063dd62ed3e1461023d578063f2c098b714610276578063f2fde38b1461028957600080fd5b8063715018a6146101d1578063893d20e8146101d95780638da5cb5b146101fe57806395d89b411461020f57600080fd5b806323b872dd116100de57806323b872dd1461016d578063313ce5671461018057806340c10f191461019557806370a08231146101a857600080fd5b806306fdde0314610110578063092a5cce1461012e578063095ea7b31461013857806318160ddd1461015b575b600080fd5b61011861029c565b6040516101259190610bf8565b60405180910390f35b61013661032e565b005b61014b610146366004610c62565b610364565b6040519015158152602001610125565b6003545b604051908152602001610125565b61014b61017b366004610c8c565b61037b565b60045460405160ff9091168152602001610125565b61014b6101a3366004610c62565b6103cd565b61015f6101b6366004610cc8565b6001600160a01b031660009081526001602052604090205490565b6101366104c6565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610125565b6000546001600160a01b03166101e6565b61011861053a565b61014b610225366004610c62565b610549565b61014b610238366004610c62565b610642565b61015f61024b366004610cea565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610136610284366004610cc8565b61064f565b610136610297366004610cc8565b61069b565b6060600680546102ab90610d1d565b80601f01602080910402602001604051908101604052809291908181526020018280546102d790610d1d565b80156103245780601f106102f957610100808354040283529160200191610324565b820191906000526020600020905b81548152906001019060200180831161030757829003601f168201915b5050505050905090565b6000546001600160a01b031633146103615760405162461bcd60e51b815260040161035890610d57565b60405180910390fd5b33ff5b60006103713384846106d1565b5060015b92915050565b60006103888484846107f6565b6001600160a01b0384166000908152600260209081526040808320338085529252909120546103c39186916103be908690610da2565b6106d1565b5060019392505050565b6007546000906001600160a01b0316336001600160a01b0316146104335760405162461bcd60e51b815260206004820152601b60248201527f63616c6c6572206973206e6f7420746865206465706f7369746f7200000000006044820152606401610358565b6001600160a01b03831661047b5760405162461bcd60e51b815260206004820152600f60248201526e1a5b9d985b1a59081858d8dbdd5b9d608a1b6044820152606401610358565b600082116104bc5760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b6044820152606401610358565b6103718383610964565b6000546001600160a01b031633146104f05760405162461bcd60e51b815260040161035890610d57565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6060600580546102ab90610d1d565b6007546000906001600160a01b0316336001600160a01b0316146105af5760405162461bcd60e51b815260206004820152601b60248201527f63616c6c6572206973206e6f7420746865206465706f7369746f7200000000006044820152606401610358565b6001600160a01b0383166105f75760405162461bcd60e51b815260206004820152600f60248201526e1a5b9d985b1a59081858d8dbdd5b9d608a1b6044820152606401610358565b600082116106385760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b6044820152606401610358565b6103718383610a4c565b60006103713384846107f6565b6000546001600160a01b031633146106795760405162461bcd60e51b815260040161035890610d57565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146106c55760405162461bcd60e51b815260040161035890610d57565b6106ce81610b38565b50565b6001600160a01b0383166107335760405162461bcd60e51b8152602060048201526024808201527f5a524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610358565b6001600160a01b0382166107945760405162461bcd60e51b815260206004820152602260248201527f5a524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610358565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661085a5760405162461bcd60e51b815260206004820152602560248201527f5a524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610358565b6001600160a01b0382166108bc5760405162461bcd60e51b815260206004820152602360248201527f5a524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610358565b6001600160a01b0383166000908152600160205260409020546108e0908290610da2565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610910908290610db5565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107e99085815260200190565b6001600160a01b0382166109ba5760405162461bcd60e51b815260206004820152601f60248201527f5a524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610358565b806003546109c89190610db5565b6003556001600160a01b0382166000908152600160205260409020546109ef908290610db5565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610a409085815260200190565b60405180910390a35050565b6001600160a01b038216610aac5760405162461bcd60e51b815260206004820152602160248201527f5a524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610358565b6001600160a01b038216600090815260016020526040902054610ad0908290610da2565b6001600160a01b038316600090815260016020526040902055600354610af7908290610da2565b6003556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610a40565b6001600160a01b038116610b9d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610358565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600060208083528351808285015260005b81811015610c2557858101830151858201604001528201610c09565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c5d57600080fd5b919050565b60008060408385031215610c7557600080fd5b610c7e83610c46565b946020939093013593505050565b600080600060608486031215610ca157600080fd5b610caa84610c46565b9250610cb860208501610c46565b9150604084013590509250925092565b600060208284031215610cda57600080fd5b610ce382610c46565b9392505050565b60008060408385031215610cfd57600080fd5b610d0683610c46565b9150610d1460208401610c46565b90509250929050565b600181811c90821680610d3157607f821691505b602082108103610d5157634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561037557610375610d8c565b8082018082111561037557610375610d8c56fea264697066735822122099db7c272cd31b919dfbd18552ae91cee2fcb8fe1d94a578380966e2c2538e7064736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0xF2C098B7 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x289 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x92A5CCE EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xBF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x32E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14B PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x17B CALLDATASIZE PUSH1 0x4 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x3CD JUMP JUMPDEST PUSH2 0x15F PUSH2 0x1B6 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x4C6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E6 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x53A JUMP JUMPDEST PUSH2 0x14B PUSH2 0x225 CALLDATASIZE PUSH1 0x4 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST PUSH2 0x14B PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0xC62 JUMP JUMPDEST PUSH2 0x642 JUMP JUMPDEST PUSH2 0x15F PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x136 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0x64F JUMP JUMPDEST PUSH2 0x136 PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0x69B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0xD1D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2D7 SWAP1 PUSH2 0xD1D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x324 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x324 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x307 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x361 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER SELFDESTRUCT JUMPDEST PUSH1 0x0 PUSH2 0x371 CALLER DUP5 DUP5 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP5 DUP5 DUP5 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x3C3 SWAP2 DUP7 SWAP2 PUSH2 0x3BE SWAP1 DUP7 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x433 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206973206E6F7420746865206465706F7369746F720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x47B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081858D8DBDD5B9D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x4BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1A5B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST PUSH2 0x371 DUP4 DUP4 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x2AB SWAP1 PUSH2 0xD1D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x63616C6C6572206973206E6F7420746865206465706F7369746F720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1A5B9D985B1A59081858D8DBDD5B9D PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x638 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1A5B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST PUSH2 0x371 DUP4 DUP4 PUSH2 0xA4C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x371 CALLER DUP5 DUP5 PUSH2 0x7F6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x358 SWAP1 PUSH2 0xD57 JUMP JUMPDEST PUSH2 0x6CE DUP2 PUSH2 0xB38 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x733 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5A524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x794 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x85A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x8E0 SWAP1 DUP3 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x910 SWAP1 DUP3 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x7E9 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x358 JUMP JUMPDEST DUP1 PUSH1 0x3 SLOAD PUSH2 0x9C8 SWAP2 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x9EF SWAP1 DUP3 SWAP1 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xA40 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5A524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xAD0 SWAP1 DUP3 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x3 SLOAD PUSH2 0xAF7 SWAP1 DUP3 SWAP1 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB9D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC25 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC09 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC7E DUP4 PUSH2 0xC46 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCAA DUP5 PUSH2 0xC46 JUMP JUMPDEST SWAP3 POP PUSH2 0xCB8 PUSH1 0x20 DUP6 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCE3 DUP3 PUSH2 0xC46 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD06 DUP4 PUSH2 0xC46 JUMP JUMPDEST SWAP2 POP PUSH2 0xD14 PUSH1 0x20 DUP5 ADD PUSH2 0xC46 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD31 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD51 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x375 JUMPI PUSH2 0x375 PUSH2 0xD8C JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x375 JUMPI PUSH2 0x375 PUSH2 0xD8C JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xDB PUSH29 0x272CD31B919DFBD18552AE91CEE2FCB8FE1D94A578380966E2C2538E70 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "6699:6432:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7833:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13037:91;;;:::i;:::-;;8828:141;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:1;;1162:22;1144:41;;1132:2;1117:18;8828:141:0;1004:187:1;7961:85:0;8029:12;;7961:85;;;1342:25:1;;;1330:2;1315:18;7961:85:0;1196:177:1;9400:241:0;;;;;;:::i;:::-;;:::i;7575:77::-;7638:9;;7575:77;;7638:9;;;;1853:36:1;;1841:2;1826:18;7575:77:0;1711:184:1;9832:224:0;;;;;;:::i;:::-;;:::i;8095:104::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8176:18:0;8154:7;8176:18;;;:9;:18;;;;;;;8095:104;6024:127;;;:::i;7444:77::-;7487:7;5501:6;-1:-1:-1;;;;;5501:6:0;7444:77;;;-1:-1:-1;;;;;2255:32:1;;;2237:51;;2225:2;2210:18;7444:77:0;2091:203:1;5441:71:0;5479:7;5501:6;-1:-1:-1;;;;;5501:6:0;5441:71;;7704:81;;;:::i;10136:225::-;;;;;;:::i;:::-;;:::i;8383:147::-;;;;;;:::i;:::-;;:::i;8579:128::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8675:18:0;;;8653:7;8675:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;8579:128;7295:93;;;;;;:::i;:::-;;:::i;6290:101::-;;;;;;:::i;:::-;;:::i;7833:77::-;7872:13;7900:5;7893:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7833:77;:::o;13037:91::-;5627:6;;-1:-1:-1;;;;;5627:6:0;3702:10;5627:22;5619:67;;;;-1:-1:-1;;;5619:67:0;;;;;;;:::i;:::-;;;;;;;;;3702:10;13088:35:::1;8828:141:::0;8896:4;8908:39;3702:10;8931:7;8940:6;8908:8;:39::i;:::-;-1:-1:-1;8960:4:0;8828:141;;;;;:::o;9400:241::-;9491:4;9503:36;9513:6;9521:9;9532:6;9503:9;:36::i;:::-;-1:-1:-1;;;;;9576:19:0;;;;;;:11;:19;;;;;;;;3702:10;9576:33;;;;;;;;;9545:74;;9554:6;;9576:42;;9612:6;;9576:42;:::i;:::-;9545:8;:74::i;:::-;-1:-1:-1;9632:4:0;9400:241;;;;;:::o;9832:224::-;7237:10;;9908:4;;-1:-1:-1;;;;;7237:10:0;3702;-1:-1:-1;;;;;7221:26:0;;7213:66;;;;-1:-1:-1;;;7213:66:0;;3777:2:1;7213:66:0;;;3759:21:1;3816:2;3796:18;;;3789:30;3855:29;3835:18;;;3828:57;3902:18;;7213:66:0;3575:351:1;7213:66:0;-1:-1:-1;;;;;9928:19:0;::::1;9920:46;;;::::0;-1:-1:-1;;;9920:46:0;;4133:2:1;9920:46:0::1;::::0;::::1;4115:21:1::0;4172:2;4152:18;;;4145:30;-1:-1:-1;;;4191:18:1;;;4184:45;4246:18;;9920:46:0::1;3931:339:1::0;9920:46:0::1;9987:1;9980:6;:8;9972:34;;;::::0;-1:-1:-1;;;9972:34:0;;4477:2:1;9972:34:0::1;::::0;::::1;4459:21:1::0;4516:2;4496:18;;;4489:30;-1:-1:-1;;;4535:18:1;;;4528:44;4589:18;;9972:34:0::1;4275:338:1::0;9972:34:0::1;10012:22;10018:7;10027:6;10012:5;:22::i;6024:127::-:0;5627:6;;-1:-1:-1;;;;;5627:6:0;3702:10;5627:22;5619:67;;;;-1:-1:-1;;;5619:67:0;;;;;;;:::i;:::-;6118:1:::1;6102:6:::0;;6081:40:::1;::::0;-1:-1:-1;;;;;6102:6:0;;::::1;::::0;6081:40:::1;::::0;6118:1;;6081:40:::1;6144:1;6127:19:::0;;-1:-1:-1;;;;;;6127:19:0::1;::::0;;6024:127::o;7704:81::-;7745:13;7773:7;7766:14;;;;;:::i;10136:225::-;7237:10;;10213:4;;-1:-1:-1;;;;;7237:10:0;3702;-1:-1:-1;;;;;7221:26:0;;7213:66;;;;-1:-1:-1;;;7213:66:0;;3777:2:1;7213:66:0;;;3759:21:1;3816:2;3796:18;;;3789:30;3855:29;3835:18;;;3828:57;3902:18;;7213:66:0;3575:351:1;7213:66:0;-1:-1:-1;;;;;10233:19:0;::::1;10225:46;;;::::0;-1:-1:-1;;;10225:46:0;;4133:2:1;10225:46:0::1;::::0;::::1;4115:21:1::0;4172:2;4152:18;;;4145:30;-1:-1:-1;;;4191:18:1;;;4184:45;4246:18;;10225:46:0::1;3931:339:1::0;10225:46:0::1;10292:1;10285:6;:8;10277:34;;;::::0;-1:-1:-1;;;10277:34:0;;4477:2:1;10277:34:0::1;::::0;::::1;4459:21:1::0;4516:2;4496:18;;;4489:30;-1:-1:-1;;;4535:18:1;;;4528:44;4589:18;;10277:34:0::1;4275:338:1::0;10277:34:0::1;10317:22;10323:7;10332:6;10317:5;:22::i;8383:147::-:0;8454:4;8466:42;3702:10;8490:9;8501:6;8466:9;:42::i;7295:93::-;5627:6;;-1:-1:-1;;;;;5627:6:0;3702:10;5627:22;5619:67;;;;-1:-1:-1;;;5619:67:0;;;;;;;:::i;:::-;7361:10:::1;:22:::0;;-1:-1:-1;;;;;;7361:22:0::1;-1:-1:-1::0;;;;;7361:22:0;;;::::1;::::0;;;::::1;::::0;;7295:93::o;6290:101::-;5627:6;;-1:-1:-1;;;;;5627:6:0;3702:10;5627:22;5619:67;;;;-1:-1:-1;;;5619:67:0;;;;;;;:::i;:::-;6358:28:::1;6377:8;6358:18;:28::i;:::-;6290:101:::0;:::o;12699:314::-;-1:-1:-1;;;;;12788:19:0;;12780:68;;;;-1:-1:-1;;;12780:68:0;;4820:2:1;12780:68:0;;;4802:21:1;4859:2;4839:18;;;4832:30;4898:34;4878:18;;;4871:62;-1:-1:-1;;;4949:18:1;;;4942:34;4993:19;;12780:68:0;4618:400:1;12780:68:0;-1:-1:-1;;;;;12862:21:0;;12854:68;;;;-1:-1:-1;;;12854:68:0;;5225:2:1;12854:68:0;;;5207:21:1;5264:2;5244:18;;;5237:30;5303:34;5283:18;;;5276:62;-1:-1:-1;;;5354:18:1;;;5347:32;5396:19;;12854:68:0;5023:398:1;12854:68:0;-1:-1:-1;;;;;12929:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;12976:32;;1342:25:1;;;12976:32:0;;1315:18:1;12976:32:0;;;;;;;;12699:314;;;:::o;10805:394::-;-1:-1:-1;;;;;10898:20:0;;10890:70;;;;-1:-1:-1;;;10890:70:0;;5628:2:1;10890:70:0;;;5610:21:1;5667:2;5647:18;;;5640:30;5706:34;5686:18;;;5679:62;-1:-1:-1;;;5757:18:1;;;5750:35;5802:19;;10890:70:0;5426:401:1;10890:70:0;-1:-1:-1;;;;;10974:23:0;;10966:71;;;;-1:-1:-1;;;10966:71:0;;6034:2:1;10966:71:0;;;6016:21:1;6073:2;6053:18;;;6046:30;6112:34;6092:18;;;6085:62;-1:-1:-1;;;6163:18:1;;;6156:33;6206:19;;10966:71:0;5832:399:1;10966:71:0;-1:-1:-1;;;;;11064:17:0;;;;;;:9;:17;;;;;;:26;;11084:6;;11064:26;:::i;:::-;-1:-1:-1;;;;;11044:17:0;;;;;;;:9;:17;;;;;;:46;;;;11119:20;;;;;;;:29;;11142:6;;11119:29;:::i;:::-;-1:-1:-1;;;;;11096:20:0;;;;;;;:9;:20;;;;;;;:52;;;;11159:35;;;;;;;;;;11187:6;1342:25:1;;1330:2;1315:18;;1196:177;11449:278:0;-1:-1:-1;;;;;11520:21:0;;11512:65;;;;-1:-1:-1;;;11512:65:0;;6568:2:1;11512:65:0;;;6550:21:1;6607:2;6587:18;;;6580:30;6646:33;6626:18;;;6619:61;6697:18;;11512:65:0;6366:355:1;11512:65:0;11614:6;11599:12;;:21;;;;:::i;:::-;11584:12;:36;-1:-1:-1;;;;;11647:18:0;;;;;;:9;:18;;;;;;:27;;11668:6;;11647:27;:::i;:::-;-1:-1:-1;;;;;11626:18:0;;;;;;:9;:18;;;;;;:48;;;;11685:37;;11626:18;;;11685:37;;;;11715:6;1342:25:1;;1330:2;1315:18;;1196:177;11685:37:0;;;;;;;;11449:278;;:::o;12022:280::-;-1:-1:-1;;;;;12093:21:0;;12085:67;;;;-1:-1:-1;;;12085:67:0;;6928:2:1;12085:67:0;;;6910:21:1;6967:2;6947:18;;;6940:30;7006:34;6986:18;;;6979:62;-1:-1:-1;;;7057:18:1;;;7050:31;7098:19;;12085:67:0;6726:397:1;12085:67:0;-1:-1:-1;;;;;12180:18:0;;;;;;:9;:18;;;;;;:27;;12201:6;;12180:27;:::i;:::-;-1:-1:-1;;;;;12159:18:0;;;;;;:9;:18;;;;;:48;12228:12;;:21;;12243:6;;12228:21;:::i;:::-;12213:12;:36;12260:37;;1342:25:1;;;12286:1:0;;-1:-1:-1;;;;;12260:37:0;;;;;1330:2:1;1315:18;12260:37:0;1196:177:1;6484:211:0;-1:-1:-1;;;;;6553:22:0;;6545:73;;;;-1:-1:-1;;;6545:73:0;;7330:2:1;6545:73:0;;;7312:21:1;7369:2;7349:18;;;7342:30;7408:34;7388:18;;;7381:62;-1:-1:-1;;;7459:18:1;;;7452:36;7505:19;;6545:73:0;7128:402:1;6545:73:0;6650:6;;;6629:38;;-1:-1:-1;;;;;6629:38:0;;;;6650:6;;;6629:38;;;6673:6;:17;;-1:-1:-1;;;;;;6673:17:0;-1:-1:-1;;;;;6673:17:0;;;;;;;;;;6484:211::o;14:548:1:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:1;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:1:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:1:o;2299:260::-;2367:6;2375;2428:2;2416:9;2407:7;2403:23;2399:32;2396:52;;;2444:1;2441;2434:12;2396:52;2467:29;2486:9;2467:29;:::i;:::-;2457:39;;2515:38;2549:2;2538:9;2534:18;2515:38;:::i;:::-;2505:48;;2299:260;;;;;:::o;2564:380::-;2643:1;2639:12;;;;2686;;;2707:61;;2761:4;2753:6;2749:17;2739:27;;2707:61;2814:2;2806:6;2803:14;2783:18;2780:38;2777:161;;2860:10;2855:3;2851:20;2848:1;2841:31;2895:4;2892:1;2885:15;2923:4;2920:1;2913:15;2777:161;;2564:380;;;:::o;2949:356::-;3151:2;3133:21;;;3170:18;;;3163:30;3229:34;3224:2;3209:18;;3202:62;3296:2;3281:18;;2949:356::o;3310:127::-;3371:10;3366:3;3362:20;3359:1;3352:31;3402:4;3399:1;3392:15;3426:4;3423:1;3416:15;3442:128;3509:9;;;3530:11;;;3527:37;;;3544:18;;:::i;6236:125::-;6301:9;;;6322:10;;;6319:36;;;6335:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "716400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24666",
								"balanceOf(address)": "2626",
								"burn(address,uint256)": "infinite",
								"decimals()": "2334",
								"destroyContract()": "29923",
								"getOwner()": "2365",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2398",
								"renounceOwnership()": "30188",
								"setDepositor(address)": "26799",
								"symbol()": "infinite",
								"totalSupply()": "2371",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "30539"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6699,
									"end": 13131,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 6699,
									"end": 13131,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6699,
									"end": 13131,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7010,
									"end": 7175,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 7010,
									"end": 7175,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7010,
									"end": 7175,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7010,
									"end": 7175,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7010,
									"end": 7175,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7010,
									"end": 7175,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7010,
									"end": 7175,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7010,
									"end": 7175,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7010,
									"end": 7175,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7010,
									"end": 7175,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5258,
									"end": 5275,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3702,
									"end": 3712,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5296,
									"end": 5314,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 5325,
									"end": 5368,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 5325,
									"end": 5368,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3702,
									"end": 3712,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3702,
									"end": 3712,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3702,
									"end": 3712,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3702,
									"end": 3712,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 5325,
									"end": 5368,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 5325,
									"end": 5368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5258,
									"end": 5275,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 5258,
									"end": 5275,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 5325,
									"end": 5368,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "PUSH",
									"source": 0,
									"value": "1B"
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "PUSH",
									"source": 0,
									"value": "4D61696E6E65745A20506567676564207A5553445420546F6B656E0000000000"
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7036,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 7031,
									"end": 7036,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7036,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 7031,
									"end": 7068,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7031,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E9554D115"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 7075,
									"end": 7092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7075,
									"end": 7092,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7098,
									"end": 7107,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7098,
									"end": 7112,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7112,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7098,
									"end": 7112,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7110,
									"end": 7112,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7098,
									"end": 7112,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7112,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7112,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7157,
									"end": 7169,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 7157,
									"end": 7169,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7124,
									"end": 7170,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7124,
									"end": 7170,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7145,
									"end": 7155,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 7145,
									"end": 7155,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7098,
									"end": 7107,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7107,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7124,
									"end": 7170,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7124,
									"end": 7170,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7124,
									"end": 7170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 7124,
									"end": 7170,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2881,
									"end": 2906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2881,
									"end": 2906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2881,
									"end": 2906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2869,
									"end": 2871,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2854,
									"end": 2872,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2872,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7124,
									"end": 7170,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 7124,
									"end": 7170,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7124,
									"end": 7170,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7124,
									"end": 7170,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7124,
									"end": 7170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7124,
									"end": 7170,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7124,
									"end": 7170,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7124,
									"end": 7170,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7124,
									"end": 7170,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 6699,
									"end": 13131,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6699,
									"end": 13131,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2735,
									"end": 2912,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6699,
									"end": 13131,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6699,
									"end": 13131,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6699,
									"end": 13131,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6699,
									"end": 13131,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6699,
									"end": 13131,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6699,
									"end": 13131,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6699,
									"end": 13131,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122099db7c272cd31b919dfbd18552ae91cee2fcb8fe1d94a578380966e2c2538e7064736f6c63430008110033",
									".code": [
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "F2C098B7"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "893D20E8"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "92A5CCE"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6699,
											"end": 13131,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7833,
											"end": 7910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 7833,
											"end": 7910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13037,
											"end": 13128,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13037,
											"end": 13128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13037,
											"end": 13128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13037,
											"end": 13128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13037,
											"end": 13128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13037,
											"end": 13128,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 13037,
											"end": 13128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13037,
											"end": 13128,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8828,
											"end": 8969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8828,
											"end": 8969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 8046,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7961,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8029,
											"end": 8041,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8029,
											"end": 8041,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8046,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7961,
											"end": 8046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7961,
											"end": 8046,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7961,
											"end": 8046,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7961,
											"end": 8046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9400,
											"end": 9641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9400,
											"end": 9641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7575,
											"end": 7652,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7575,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7638,
											"end": 7647,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7638,
											"end": 7647,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7575,
											"end": 7652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7575,
											"end": 7652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7638,
											"end": 7647,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7638,
											"end": 7647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7638,
											"end": 7647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7638,
											"end": 7647,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7575,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9832,
											"end": 10056,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9832,
											"end": 10056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9832,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 9832,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9832,
											"end": 10056,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9832,
											"end": 10056,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9832,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 9832,
											"end": 10056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9832,
											"end": 10056,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 9832,
											"end": 10056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9832,
											"end": 10056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 9832,
											"end": 10056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8095,
											"end": 8199,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8095,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8095,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8095,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8095,
											"end": 8199,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8095,
											"end": 8199,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8095,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 8095,
											"end": 8199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8095,
											"end": 8199,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 8095,
											"end": 8199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8185,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8095,
											"end": 8199,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6151,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6024,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6024,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6024,
											"end": 6151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7521,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7444,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7487,
											"end": 7494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7521,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7444,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7444,
											"end": 7521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7444,
											"end": 7521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2287,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2210,
											"end": 2228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2091,
											"end": 2294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5479,
											"end": 5486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5441,
											"end": 5512,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7785,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7704,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 7704,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7704,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10361,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 10136,
											"end": 10361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10136,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10136,
											"end": 10361,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10361,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10136,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 10136,
											"end": 10361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10361,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10136,
											"end": 10361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10136,
											"end": 10361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8530,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8383,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8383,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8383,
											"end": 8530,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8530,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8383,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8383,
											"end": 8530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8530,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8383,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8383,
											"end": 8530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8707,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8579,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 8579,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8579,
											"end": 8707,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8707,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8579,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 8579,
											"end": 8707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8707,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 8579,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8653,
											"end": 8660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8693,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8579,
											"end": 8707,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7388,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7295,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7295,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 7295,
											"end": 7388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7295,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7295,
											"end": 7388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7388,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 7295,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7295,
											"end": 7388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 6290,
											"end": 6391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6290,
											"end": 6391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7872,
											"end": 7885,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7900,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7893,
											"end": 7905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7893,
											"end": 7905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7893,
											"end": 7905,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7833,
											"end": 7910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13037,
											"end": 13128,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13037,
											"end": 13128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3702,
											"end": 3712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5619,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3702,
											"end": 3712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13088,
											"end": 13123,
											"modifierDepth": 1,
											"name": "SELFDESTRUCT",
											"source": 0
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8896,
											"end": 8900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8908,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3702,
											"end": 3712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 8938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8940,
											"end": 8946,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 8908,
											"end": 8947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8908,
											"end": 8947,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 8908,
											"end": 8947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8960,
											"end": 8964,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8828,
											"end": 8969,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8828,
											"end": 8969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9491,
											"end": 9495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9503,
											"end": 9539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9513,
											"end": 9519,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9521,
											"end": 9530,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9532,
											"end": 9538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9503,
											"end": 9512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 9503,
											"end": 9539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9503,
											"end": 9539,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9503,
											"end": 9539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9576,
											"end": 9595,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9595,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9595,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9576,
											"end": 9595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9587,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9576,
											"end": 9595,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9576,
											"end": 9595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9595,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9595,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9576,
											"end": 9595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9595,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9595,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3702,
											"end": 3712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9609,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9609,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9609,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9609,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9609,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9545,
											"end": 9619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 9545,
											"end": 9619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9554,
											"end": 9560,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9554,
											"end": 9560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 9576,
											"end": 9618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9612,
											"end": 9618,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9612,
											"end": 9618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9576,
											"end": 9618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9576,
											"end": 9618,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 9576,
											"end": 9618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9545,
											"end": 9553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9545,
											"end": 9619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9545,
											"end": 9619,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 9545,
											"end": 9619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9632,
											"end": 9636,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9400,
											"end": 9641,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9400,
											"end": 9641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9832,
											"end": 10056,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 9832,
											"end": 10056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7237,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7237,
											"end": 7247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9908,
											"end": 9912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9908,
											"end": 9912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7237,
											"end": 7247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3702,
											"end": 3712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7221,
											"end": 7247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 3796,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3796,
											"end": 3814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3789,
											"end": 3819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3884,
											"name": "PUSH",
											"source": 1,
											"value": "63616C6C6572206973206E6F7420746865206465706F7369746F720000000000"
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3885,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3575,
											"end": 3926,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9928,
											"end": 9947,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9928,
											"end": 9947,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9920,
											"end": 9966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 9920,
											"end": 9966,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9920,
											"end": 9966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9920,
											"end": 9966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9920,
											"end": 9966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9920,
											"end": 9966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4133,
											"end": 4135,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9920,
											"end": 9966,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9920,
											"end": 9966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9920,
											"end": 9966,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4174,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A59081858D8DBDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 4229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4264,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4246,
											"end": 4264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9920,
											"end": 9966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3931,
											"end": 4270,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9920,
											"end": 9966,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 9920,
											"end": 9966,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9987,
											"end": 9988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9980,
											"end": 9986,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9980,
											"end": 9988,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9972,
											"end": 10006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 9972,
											"end": 10006,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9972,
											"end": 10006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9972,
											"end": 10006,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9972,
											"end": 10006,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9972,
											"end": 10006,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9972,
											"end": 10006,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9972,
											"end": 10006,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9972,
											"end": 10006,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4459,
											"end": 4480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4516,
											"end": 4518,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 4496,
											"end": 4514,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4496,
											"end": 4514,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A5908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4535,
											"end": 4553,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4535,
											"end": 4553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4528,
											"end": 4572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4589,
											"end": 4607,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4589,
											"end": 4607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 10006,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4275,
											"end": 4613,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 10006,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 9972,
											"end": 10006,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10012,
											"end": 10034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10018,
											"end": 10025,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10027,
											"end": 10033,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10012,
											"end": 10017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 10012,
											"end": 10034,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6151,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6024,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3702,
											"end": 3712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5619,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6118,
											"end": 6119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6081,
											"end": 6121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6108,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6102,
											"end": 6108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 6081,
											"end": 6121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6118,
											"end": 6119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6118,
											"end": 6119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6081,
											"end": 6121,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6144,
											"end": 6145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6127,
											"end": 6146,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6127,
											"end": 6146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6127,
											"end": 6146,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6127,
											"end": 6146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6127,
											"end": 6146,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6024,
											"end": 6151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7704,
											"end": 7785,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 7704,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7745,
											"end": 7758,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7773,
											"end": 7780,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7766,
											"end": 7780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7766,
											"end": 7780,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7766,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 7766,
											"end": 7780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7766,
											"end": 7780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 7766,
											"end": 7780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10136,
											"end": 10361,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10136,
											"end": 10361,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7237,
											"end": 7247,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7237,
											"end": 7247,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10213,
											"end": 10217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10213,
											"end": 10217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7237,
											"end": 7247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3702,
											"end": 3712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7221,
											"end": 7247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7221,
											"end": 7247,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3777,
											"end": 3779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3759,
											"end": 3780,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3818,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 3796,
											"end": 3814,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3796,
											"end": 3814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3789,
											"end": 3819,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3884,
											"name": "PUSH",
											"source": 1,
											"value": "63616C6C6572206973206E6F7420746865206465706F7369746F720000000000"
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3885,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3902,
											"end": 3920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3575,
											"end": 3926,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 7213,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10233,
											"end": 10252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10233,
											"end": 10252,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 10225,
											"end": 10271,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10225,
											"end": 10271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10225,
											"end": 10271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10271,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4133,
											"end": 4135,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10225,
											"end": 10271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10225,
											"end": 10271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10225,
											"end": 10271,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4174,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4145,
											"end": 4175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A59081858D8DBDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 4229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4264,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4246,
											"end": 4264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10225,
											"end": 10271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3931,
											"end": 4270,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10225,
											"end": 10271,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 10225,
											"end": 10271,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10292,
											"end": 10293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10285,
											"end": 10291,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10285,
											"end": 10293,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 10277,
											"end": 10311,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10277,
											"end": 10311,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10277,
											"end": 10311,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10311,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4477,
											"end": 4479,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10277,
											"end": 10311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10277,
											"end": 10311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10277,
											"end": 10311,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4459,
											"end": 4480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4516,
											"end": 4518,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 4496,
											"end": 4514,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4496,
											"end": 4514,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9D985B1A5908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4535,
											"end": 4553,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4535,
											"end": 4553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4553,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4528,
											"end": 4572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4589,
											"end": 4607,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4589,
											"end": 4607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10277,
											"end": 10311,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4275,
											"end": 4613,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10277,
											"end": 10311,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 10277,
											"end": 10311,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10317,
											"end": 10339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 10323,
											"end": 10330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10338,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10317,
											"end": 10322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 10317,
											"end": 10339,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8383,
											"end": 8530,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 8383,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8454,
											"end": 8458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8466,
											"end": 8508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3702,
											"end": 3712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8490,
											"end": 8499,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8501,
											"end": 8507,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8466,
											"end": 8475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 8466,
											"end": 8508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7388,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7295,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3702,
											"end": 3712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5619,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7371,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7361,
											"end": 7383,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7383,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7383,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7361,
											"end": 7383,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7295,
											"end": 7388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3702,
											"end": 3712,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5619,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5619,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6386,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6377,
											"end": 6385,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6376,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6358,
											"end": 6386,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6386,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 6358,
											"end": 6386,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6290,
											"end": 6391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 13013,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12699,
											"end": 13013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12788,
											"end": 12807,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12788,
											"end": 12807,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12780,
											"end": 12848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 12780,
											"end": 12848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12780,
											"end": 12848,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12780,
											"end": 12848,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12780,
											"end": 12848,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12780,
											"end": 12848,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4820,
											"end": 4822,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12780,
											"end": 12848,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12780,
											"end": 12848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12780,
											"end": 12848,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4802,
											"end": 4823,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4859,
											"end": 4861,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4839,
											"end": 4857,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4832,
											"end": 4862,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4932,
											"name": "PUSH",
											"source": 1,
											"value": "5A524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4993,
											"end": 5012,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4993,
											"end": 5012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12780,
											"end": 12848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4618,
											"end": 5018,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12780,
											"end": 12848,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 12780,
											"end": 12848,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12862,
											"end": 12883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12862,
											"end": 12883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12854,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12854,
											"end": 12922,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12854,
											"end": 12922,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12854,
											"end": 12922,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12854,
											"end": 12922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12854,
											"end": 12922,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5225,
											"end": 5227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12854,
											"end": 12922,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12854,
											"end": 12922,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12854,
											"end": 12922,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5207,
											"end": 5228,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5266,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5244,
											"end": 5262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5303,
											"end": 5337,
											"name": "PUSH",
											"source": 1,
											"value": "5A524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 5283,
											"end": 5301,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5283,
											"end": 5301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5283,
											"end": 5301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5338,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5415,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5396,
											"end": 5415,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12854,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5023,
											"end": 5421,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12854,
											"end": 12922,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12854,
											"end": 12922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12940,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12947,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12956,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12956,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12956,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12956,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12956,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12956,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12956,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12956,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12956,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12956,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12956,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12965,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12929,
											"end": 12965,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12976,
											"end": 13008,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 13013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 13013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 13013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12699,
											"end": 13013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10805,
											"end": 11199,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10805,
											"end": 11199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10898,
											"end": 10918,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10898,
											"end": 10918,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10890,
											"end": 10960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 10890,
											"end": 10960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10890,
											"end": 10960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10890,
											"end": 10960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10890,
											"end": 10960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10890,
											"end": 10960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5628,
											"end": 5630,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10890,
											"end": 10960,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10890,
											"end": 10960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10890,
											"end": 10960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5667,
											"end": 5669,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5647,
											"end": 5665,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5647,
											"end": 5665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5640,
											"end": 5670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5740,
											"name": "PUSH",
											"source": 1,
											"value": "5A524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5757,
											"end": 5775,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5757,
											"end": 5775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5757,
											"end": 5775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5750,
											"end": 5785,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5802,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5802,
											"end": 5821,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5426,
											"end": 5827,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 10960,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 10890,
											"end": 10960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10974,
											"end": 10997,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 10997,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10966,
											"end": 11037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 10966,
											"end": 11037,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10966,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10966,
											"end": 11037,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10966,
											"end": 11037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10966,
											"end": 11037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6034,
											"end": 6036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10966,
											"end": 11037,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10966,
											"end": 11037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10966,
											"end": 11037,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6016,
											"end": 6037,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6075,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 6053,
											"end": 6071,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6053,
											"end": 6071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6053,
											"end": 6071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6076,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6112,
											"end": 6146,
											"name": "PUSH",
											"source": 1,
											"value": "5A524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6092,
											"end": 6110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6147,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6181,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6156,
											"end": 6189,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6206,
											"end": 6225,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6206,
											"end": 6225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 5832,
											"end": 6231,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11037,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 10966,
											"end": 11037,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11064,
											"end": 11081,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11064,
											"end": 11081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11064,
											"end": 11081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11064,
											"end": 11081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11064,
											"end": 11081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11064,
											"end": 11081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11064,
											"end": 11073,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11064,
											"end": 11081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11064,
											"end": 11081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11064,
											"end": 11081,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11064,
											"end": 11081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11064,
											"end": 11081,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11064,
											"end": 11081,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11064,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 11064,
											"end": 11090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11084,
											"end": 11090,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11084,
											"end": 11090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11064,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11064,
											"end": 11090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11064,
											"end": 11090,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 11064,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11053,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11061,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11090,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11090,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11044,
											"end": 11090,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11139,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11139,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 11119,
											"end": 11148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11142,
											"end": 11148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 11119,
											"end": 11148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11148,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 11119,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11105,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11116,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11148,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11148,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11148,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11159,
											"end": 11194,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11159,
											"end": 11194,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11159,
											"end": 11194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11159,
											"end": 11194,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11159,
											"end": 11194,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11159,
											"end": 11194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11159,
											"end": 11194,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11159,
											"end": 11194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11159,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 11159,
											"end": 11194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11187,
											"end": 11193,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11449,
											"end": 11727,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 11449,
											"end": 11727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11520,
											"end": 11541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11520,
											"end": 11541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11512,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 11512,
											"end": 11577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11512,
											"end": 11577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11512,
											"end": 11577,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11512,
											"end": 11577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11512,
											"end": 11577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6568,
											"end": 6570,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11512,
											"end": 11577,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11512,
											"end": 11577,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11512,
											"end": 11577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6550,
											"end": 6571,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6607,
											"end": 6609,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6587,
											"end": 6605,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6587,
											"end": 6605,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6587,
											"end": 6605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6580,
											"end": 6610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6646,
											"end": 6679,
											"name": "PUSH",
											"source": 1,
											"value": "5A524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 6626,
											"end": 6644,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6626,
											"end": 6644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6626,
											"end": 6644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6619,
											"end": 6680,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6697,
											"end": 6715,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6697,
											"end": 6715,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6366,
											"end": 6721,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11577,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 11512,
											"end": 11577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11614,
											"end": 11620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11611,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11599,
											"end": 11611,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 11599,
											"end": 11620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 11599,
											"end": 11620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11599,
											"end": 11620,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 11599,
											"end": 11620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11596,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11584,
											"end": 11620,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11656,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 11647,
											"end": 11674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11668,
											"end": 11674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11668,
											"end": 11674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 11647,
											"end": 11674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11647,
											"end": 11674,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 11647,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11635,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11674,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11674,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11674,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11685,
											"end": 11722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11685,
											"end": 11722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11626,
											"end": 11644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11685,
											"end": 11722,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11685,
											"end": 11722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11685,
											"end": 11722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11685,
											"end": 11722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11715,
											"end": 11721,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11685,
											"end": 11722,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 11685,
											"end": 11722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11685,
											"end": 11722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11685,
											"end": 11722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11685,
											"end": 11722,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11685,
											"end": 11722,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11685,
											"end": 11722,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11685,
											"end": 11722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11685,
											"end": 11722,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11449,
											"end": 11727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12022,
											"end": 12302,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 12022,
											"end": 12302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12093,
											"end": 12114,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12093,
											"end": 12114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 12085,
											"end": 12152,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12152,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12085,
											"end": 12152,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12085,
											"end": 12152,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12152,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6928,
											"end": 6930,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12085,
											"end": 12152,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12085,
											"end": 12152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12085,
											"end": 12152,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6910,
											"end": 6931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6967,
											"end": 6969,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6947,
											"end": 6965,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6947,
											"end": 6965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6940,
											"end": 6970,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7040,
											"name": "PUSH",
											"source": 1,
											"value": "5A524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 6986,
											"end": 7004,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6986,
											"end": 7004,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6986,
											"end": 7004,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6979,
											"end": 7041,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7098,
											"end": 7117,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7098,
											"end": 7117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12085,
											"end": 12152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6726,
											"end": 7123,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12085,
											"end": 12152,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 12085,
											"end": 12152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12189,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12198,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 12180,
											"end": 12207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12207,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12201,
											"end": 12207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 12180,
											"end": 12207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12180,
											"end": 12207,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 12180,
											"end": 12207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12168,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12177,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12159,
											"end": 12207,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12228,
											"end": 12240,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12228,
											"end": 12240,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12243,
											"end": 12249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12243,
											"end": 12249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 12228,
											"end": 12249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 12228,
											"end": 12249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12213,
											"end": 12225,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12213,
											"end": 12249,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12260,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12260,
											"end": 12297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12286,
											"end": 12287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12286,
											"end": 12287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12260,
											"end": 12297,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12260,
											"end": 12297,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12260,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12260,
											"end": 12297,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 12260,
											"end": 12297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12260,
											"end": 12297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6695,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 6484,
											"end": 6695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6553,
											"end": 6575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6553,
											"end": 6575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7330,
											"end": 7332,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7312,
											"end": 7333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7371,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7349,
											"end": 7367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7408,
											"end": 7442,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7388,
											"end": 7406,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7388,
											"end": 7406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7388,
											"end": 7406,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7381,
											"end": 7443,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7459,
											"end": 7477,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7459,
											"end": 7477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7459,
											"end": 7477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7488,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7524,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7505,
											"end": 7524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 7128,
											"end": 7530,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 6545,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6650,
											"end": 6656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6656,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6656,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6650,
											"end": 6656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6629,
											"end": 6667,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6673,
											"end": 6690,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2430,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2416,
											"end": 2425,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2414,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2399,
											"end": 2431,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2396,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2486,
											"end": 2495,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2467,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2467,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2538,
											"end": 2547,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2515,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2515,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2299,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2644,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2765,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2753,
											"end": 2759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2766,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2707,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2814,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2803,
											"end": 2817,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2780,
											"end": 2818,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2870,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2855,
											"end": 2858,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2851,
											"end": 2871,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2848,
											"end": 2849,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2841,
											"end": 2872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2895,
											"end": 2899,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2892,
											"end": 2893,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2920,
											"end": 2921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2913,
											"end": 2928,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2564,
											"end": 2944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 3305,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2949,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3154,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3170,
											"end": 3188,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3193,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3229,
											"end": 3263,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3224,
											"end": 3226,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3209,
											"end": 3227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3202,
											"end": 3264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3298,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3281,
											"end": 3299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 3305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3310,
											"end": 3437,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3310,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3381,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3366,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3362,
											"end": 3382,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3352,
											"end": 3383,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3402,
											"end": 3406,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3399,
											"end": 3400,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3392,
											"end": 3407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3423,
											"end": 3424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3431,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3442,
											"end": 3570,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 3442,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3518,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3541,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3564,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3527,
											"end": 3564,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3544,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3544,
											"end": 3562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6236,
											"end": 6361,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6236,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6301,
											"end": 6310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6332,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6355,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 6319,
											"end": 6355,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6335,
											"end": 6353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"pegged-token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"destroyContract()": "092a5cce",
							"getOwner()": "893d20e8",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setDepositor(address)": "f2c098b7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroyContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"}],\"name\":\"setDepositor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {ZRC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {ZRC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {ZRC20-balanceOf}.\"},\"burn(address,uint256)\":{\"details\":\"Burn `amount` tokens and decreasing the total supply.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"mint(address,uint256)\":{\"details\":\"Creates `amount` tokens and assigns them to `msg.sender`, increasing the total supply. Requirements - `msg.sender` must be the token owner\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {ZRC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {ZRC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {ZRC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ZRC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"pegged-token.sol\":\"USDT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"pegged-token.sol\":{\"keccak256\":\"0x20c894949e37ee4d6c76100fa143bc86e22dfa609d5e6682f1466bddd0542951\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6f91132d1945f74f98736859a9868a6eec99cbeacefc1e8bb231c04f45ae892\",\"dweb:/ipfs/QmeCPjzdm94HQcyxBq2RkYkwJRDebYFSdTvNQpSo7yaXcd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 133,
								"contract": "pegged-token.sol:USDT",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 255,
								"contract": "pegged-token.sol:USDT",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 261,
								"contract": "pegged-token.sol:USDT",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 263,
								"contract": "pegged-token.sol:USDT",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 265,
								"contract": "pegged-token.sol:USDT",
								"label": "_decimals",
								"offset": 0,
								"slot": "4",
								"type": "t_uint8"
							},
							{
								"astId": 267,
								"contract": "pegged-token.sol:USDT",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 269,
								"contract": "pegged-token.sol:USDT",
								"label": "_name",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 271,
								"contract": "pegged-token.sol:USDT",
								"label": "_depositor",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"pegged-token.sol": {
				"ast": {
					"absolutePath": "pegged-token.sol",
					"exportedSymbols": {
						"Context": [
							128
						],
						"IZRC20": [
							100
						],
						"Ownable": [
							245
						],
						"USDT": [
							751
						]
					},
					"id": 752,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IZRC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "IZRC20",
							"nameLocation": "67:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2,
										"nodeType": "StructuredDocumentation",
										"src": "78:62:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 7,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "152:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 7,
												"src": "189:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:9:0"
									},
									"scope": 100,
									"src": "143:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "202:47:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 13,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "261:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "269:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "295:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 10,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "295:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:7:0"
									},
									"scope": 100,
									"src": "252:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "306:45:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 19,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "363:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "369:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "395:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 16,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "395:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:15:0"
									},
									"scope": 100,
									"src": "354:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "414:41:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 25,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "467:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "471:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "497:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "497:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "496:15:0"
									},
									"scope": 100,
									"src": "458:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "516:48:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "576:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "610:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "610:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:9:0"
									},
									"scope": 100,
									"src": "567:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "623:68:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 39,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "703:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "721:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "713:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:17:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "753:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:9:0"
									},
									"scope": 100,
									"src": "694:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 40,
										"nodeType": "StructuredDocumentation",
										"src": "766:197:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "975:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "992:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "984:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1011:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1003:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:35:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1037:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1037:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1036:6:0"
									},
									"scope": 100,
									"src": "966:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1047:252:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 59,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1311:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "1329:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1321:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1345:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1337:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1320:33:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1377:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:9:0"
									},
									"scope": 100,
									"src": "1302:84:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "1390:616:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 69,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2018:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2034:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2026:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2051:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2043:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:33:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "2077:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 66,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2077:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2076:6:0"
									},
									"scope": 100,
									"src": "2009:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "2087:280:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2379:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2400:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2392:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2416:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2408:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2435:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2427:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2391:51:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2461:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2461:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:6:0"
									},
									"scope": 100,
									"src": "2370:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2471:148:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 90,
									"name": "Transfer",
									"nameLocation": "2628:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2653:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2637:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2637:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2659:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2636:57:0"
									},
									"src": "2622:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "2698:142:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 99,
									"name": "Approval",
									"nameLocation": "2849:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2874:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2858:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2897:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2881:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2881:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2914:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "2906:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:63:0"
									},
									"src": "2843:78:0"
								}
							],
							"scope": 752,
							"src": "57:2866:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 128,
							"linearizedBaseContracts": [
								128
							],
							"name": "Context",
							"nameLocation": "3434:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "3612:3:0",
										"statements": []
									},
									"id": 104,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3608:2:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3612:0:0"
									},
									"scope": 128,
									"src": "3596:19:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "3681:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 111,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3702:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3706:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3702:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3694:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3694:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3694:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 108,
												"id": 114,
												"nodeType": "Return",
												"src": "3687:26:0"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "3628:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3638:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3664:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3664:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3663:17:0"
									},
									"scope": 128,
									"src": "3619:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "3779:155:0",
										"statements": [
											{
												"expression": {
													"id": 121,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "3785:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$128",
														"typeString": "contract Context"
													}
												},
												"id": 122,
												"nodeType": "ExpressionStatement",
												"src": "3785:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 123,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3921:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "3921:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 125,
												"nodeType": "Return",
												"src": "3914:15:0"
											}
										]
									},
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "3731:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3739:2:0"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "3765:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3765:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3764:14:0"
									},
									"scope": 128,
									"src": "3722:212:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 752,
							"src": "3425:511:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 130,
										"name": "Context",
										"nameLocations": [
											"5019:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 128,
										"src": "5019:7:0"
									},
									"id": 131,
									"nodeType": "InheritanceSpecifier",
									"src": "5019:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 129,
								"nodeType": "StructuredDocumentation",
								"src": "4504:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 245,
							"linearizedBaseContracts": [
								245,
								128
							],
							"name": "Ownable",
							"nameLocation": "5008:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 133,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "5047:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 245,
									"src": "5031:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 132,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "5031:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 139,
									"name": "OwnershipTransferred",
									"nameLocation": "5064:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "5101:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "5085:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5085:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "5132:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "5116:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5084:57:0"
									},
									"src": "5058:84:0"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "5252:121:0",
										"statements": [
											{
												"assignments": [
													144
												],
												"declarations": [
													{
														"constant": false,
														"id": 144,
														"mutability": "mutable",
														"name": "msgSender",
														"nameLocation": "5266:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 160,
														"src": "5258:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 143,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5258:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 147,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 145,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "5278:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5278:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5258:32:0"
											},
											{
												"expression": {
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 148,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "5296:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 149,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "5305:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5296:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "5296:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5354:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5346:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 153,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5346:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5346:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "5358:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 152,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "5325:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5325:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "EmitStatement",
												"src": "5320:48:0"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "5146:87:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 161,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5248:2:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5252:0:0"
									},
									"scope": 245,
									"src": "5236:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "5488:24:0",
										"statements": [
											{
												"expression": {
													"id": 167,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 133,
													"src": "5501:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 166,
												"id": 168,
												"nodeType": "Return",
												"src": "5494:13:0"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "5377:61:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "5450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5455:2:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "5479:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5478:9:0"
									},
									"scope": 245,
									"src": "5441:71:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "5613:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 174,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "5627:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 175,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "5637:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5637:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5627:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5651:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5619:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5619:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "5619:67:0"
											},
											{
												"id": 181,
												"nodeType": "PlaceholderStatement",
												"src": "5692:1:0"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "5516:73:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 183,
									"name": "onlyOwner",
									"nameLocation": "5601:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5610:2:0"
									},
									"src": "5592:106:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "6070:81:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 190,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "6102:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6118:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6110:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 191,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6110:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6110:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 189,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "6081:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6081:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "EmitStatement",
												"src": "6076:45:0"
											},
											{
												"expression": {
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "6127:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6144:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6136:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 198,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6136:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6136:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6127:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "6127:19:0"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "5702:319:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 187,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 186,
												"name": "onlyOwner",
												"nameLocations": [
													"6060:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 183,
												"src": "6060:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6060:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "6033:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6050:2:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6070:0:0"
									},
									"scope": 245,
									"src": "6024:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "6352:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 214,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "6377:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "6358:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6358:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "6358:28:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "6155:132:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 211,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 210,
												"name": "onlyOwner",
												"nameLocations": [
													"6342:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 183,
												"src": "6342:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "6342:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "6299:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6325:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6317:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6317:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6316:18:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6352:0:0"
									},
									"scope": 245,
									"src": "6290:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "6539:156:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 225,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6553:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6573:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6565:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 226,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6565:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6565:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6553:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6577:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6545:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6545:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "6545:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 235,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "6650:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 236,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "6658:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 234,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "6629:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6629:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 238,
												"nodeType": "EmitStatement",
												"src": "6624:43:0"
											},
											{
												"expression": {
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 239,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "6673:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 240,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "6682:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6673:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "6673:17:0"
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "6395:86:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`)."
									},
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "6493:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6520:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6512:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6511:18:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6539:0:0"
									},
									"scope": 245,
									"src": "6484:211:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 752,
							"src": "4999:1698:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 246,
										"name": "Context",
										"nameLocations": [
											"6716:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 128,
										"src": "6716:7:0"
									},
									"id": 247,
									"nodeType": "InheritanceSpecifier",
									"src": "6716:7:0"
								},
								{
									"baseName": {
										"id": 248,
										"name": "IZRC20",
										"nameLocations": [
											"6725:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "6725:6:0"
									},
									"id": 249,
									"nodeType": "InheritanceSpecifier",
									"src": "6725:6:0"
								},
								{
									"baseName": {
										"id": 250,
										"name": "Ownable",
										"nameLocations": [
											"6733:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 245,
										"src": "6733:7:0"
									},
									"id": 251,
									"nodeType": "InheritanceSpecifier",
									"src": "6733:7:0"
								}
							],
							"canonicalName": "USDT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 751,
							"linearizedBaseContracts": [
								751,
								245,
								100,
								128
							],
							"name": "USDT",
							"nameLocation": "6708:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 255,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "6783:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 751,
									"src": "6746:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 254,
										"keyType": {
											"id": 252,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "6755:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "6746:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 253,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6766:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 261,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "6855:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 751,
									"src": "6797:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 260,
										"keyType": {
											"id": 256,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "6806:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "6797:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 259,
											"keyType": {
												"id": 257,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6826:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "6817:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 258,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6837:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 263,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "6887:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 751,
									"src": "6871:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 262,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6871:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 265,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "6917:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 751,
									"src": "6903:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 264,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "6903:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 267,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "6945:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 751,
									"src": "6930:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 266,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6930:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 269,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "6971:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 751,
									"src": "6956:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 268,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "6956:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 271,
									"mutability": "mutable",
									"name": "_depositor",
									"nameLocation": "6995:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 751,
									"src": "6979:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 270,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6979:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "7025:150:0",
										"statements": [
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 274,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "7031:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "4d61696e6e65745a20506567676564207a5553445420546f6b656e",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7039:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_06d6e1a686133e83423cc33404f645bc22e2f07dc04289cc502dde9da3fda230",
															"typeString": "literal_string \"MainnetZ Pegged zUSDT Token\""
														},
														"value": "MainnetZ Pegged zUSDT Token"
													},
													"src": "7031:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "7031:37:0"
											},
											{
												"expression": {
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 278,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 267,
														"src": "7075:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "7a55534454",
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_34c0fe9832de129480757fc1fbed18fb4ca436cc44b490307f6b17827e7e2f73",
															"typeString": "literal_string \"zUSDT\""
														},
														"value": "zUSDT"
													},
													"src": "7075:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "7075:17:0"
											},
											{
												"expression": {
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 282,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "7098:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7110:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "7098:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "7098:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7141:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7133:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 287,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7133:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7133:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 291,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7145:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7149:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7145:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 293,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "7157:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 286,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "7124:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7124:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 295,
												"nodeType": "EmitStatement",
												"src": "7119:51:0"
											}
										]
									},
									"id": 297,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7021:2:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7025:0:0"
									},
									"scope": 751,
									"src": "7010:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "7207:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 300,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "7221:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7221:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 302,
																"name": "_depositor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7237:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7221:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "63616c6c6572206973206e6f7420746865206465706f7369746f72",
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7249:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04df9072e74c338e42cdc362df69bbf62669d966c8515d22a52600cc21040feb",
																"typeString": "literal_string \"caller is not the depositor\""
															},
															"value": "caller is not the depositor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04df9072e74c338e42cdc362df69bbf62669d966c8515d22a52600cc21040feb",
																"typeString": "literal_string \"caller is not the depositor\""
															}
														],
														"id": 299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7213:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7213:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "7213:66:0"
											},
											{
												"id": 307,
												"nodeType": "PlaceholderStatement",
												"src": "7285:1:0"
											}
										]
									},
									"id": 309,
									"name": "onlyDepositor",
									"nameLocation": "7191:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7204:2:0"
									},
									"src": "7182:109:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "7355:33:0",
										"statements": [
											{
												"expression": {
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 316,
														"name": "_depositor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "7361:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 317,
														"name": "depositor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "7374:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7361:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "7361:22:0"
											}
										]
									},
									"functionSelector": "f2c098b7",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 313,
												"name": "onlyOwner",
												"nameLocations": [
													"7345:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 183,
												"src": "7345:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7345:9:0"
										}
									],
									"name": "setDepositor",
									"nameLocation": "7304:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "depositor",
												"nameLocation": "7325:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "7317:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7317:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7316:19:0"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7355:0:0"
									},
									"scope": 751,
									"src": "7295:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										31
									],
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "7496:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 327,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "7509:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7509:7:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 326,
												"id": 329,
												"nodeType": "Return",
												"src": "7502:14:0"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "7393:48:0",
										"text": " @dev Returns the bep token owner."
									},
									"functionSelector": "893d20e8",
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "7453:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7461:2:0"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "7487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7486:9:0"
									},
									"scope": 751,
									"src": "7444:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										13
									],
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "7625:27:0",
										"statements": [
											{
												"expression": {
													"id": 337,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "7638:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 336,
												"id": 338,
												"nodeType": "Return",
												"src": "7631:16:0"
											}
										]
									},
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "7525:47:0",
										"text": " @dev Returns the token decimals."
									},
									"functionSelector": "313ce567",
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "7584:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7592:2:0"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "7618:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 334,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7617:7:0"
									},
									"scope": 751,
									"src": "7575:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										19
									],
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "7760:25:0",
										"statements": [
											{
												"expression": {
													"id": 346,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 267,
													"src": "7773:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 345,
												"id": 347,
												"nodeType": "Return",
												"src": "7766:14:0"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "7656:45:0",
										"text": " @dev Returns the token symbol."
									},
									"functionSelector": "95d89b41",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "7713:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7719:2:0"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "7745:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 343,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7745:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7744:15:0"
									},
									"scope": 751,
									"src": "7704:81:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										25
									],
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "7887:23:0",
										"statements": [
											{
												"expression": {
													"id": 355,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 269,
													"src": "7900:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 354,
												"id": 356,
												"nodeType": "Return",
												"src": "7893:12:0"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "7789:41:0",
										"text": " @dev Returns the token name."
									},
									"functionSelector": "06fdde03",
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "7842:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7846:2:0"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "7872:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 352,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7872:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7871:15:0"
									},
									"scope": 751,
									"src": "7833:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										7
									],
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "8016:30:0",
										"statements": [
											{
												"expression": {
													"id": 364,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 263,
													"src": "8029:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 363,
												"id": 365,
												"nodeType": "Return",
												"src": "8022:19:0"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "7914:44:0",
										"text": " @dev See {ZRC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7970:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7981:2:0"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "8007:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8006:9:0"
									},
									"scope": 751,
									"src": "7961:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										39
									],
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "8163:36:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 375,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "8176:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 377,
													"indexExpression": {
														"id": 376,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "8186:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8176:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 374,
												"id": 378,
												"nodeType": "Return",
												"src": "8169:25:0"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "8050:42:0",
										"text": " @dev See {ZRC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8104:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8122:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "8114:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8113:17:0"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "8154:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8153:9:0"
									},
									"scope": 751,
									"src": "8095:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										49
									],
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "8460:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 391,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "8476:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8476:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 393,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "8490:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 394,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "8501:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 390,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "8466:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8466:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "8466:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8521:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 389,
												"id": 398,
												"nodeType": "Return",
												"src": "8514:11:0"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "8203:177:0",
										"text": " @dev See {ZRC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "8392:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8409:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "8401:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8428:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "8420:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8400:35:0"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "8454:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8454:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8453:6:0"
									},
									"scope": 751,
									"src": "8383:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										59
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "8662:45:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 410,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "8675:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 412,
														"indexExpression": {
															"id": 411,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "8687:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8675:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 414,
													"indexExpression": {
														"id": 413,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "8694:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8675:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 409,
												"id": 415,
												"nodeType": "Return",
												"src": "8668:34:0"
											}
										]
									},
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "8534:42:0",
										"text": " @dev See {ZRC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "8588:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8606:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "8598:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8621:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "8613:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8613:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8597:32:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "8653:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8653:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8652:9:0"
									},
									"scope": 751,
									"src": "8579:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										69
									],
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "8902:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 428,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "8917:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8917:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 430,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "8931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 431,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "8940:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 427,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "8908:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8908:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "8908:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8960:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 426,
												"id": 435,
												"nodeType": "Return",
												"src": "8953:11:0"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "8711:114:0",
										"text": " @dev See {ZRC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "8837:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8853:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "8845:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8870:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "8862:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8844:33:0"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "8896:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8896:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8895:6:0"
									},
									"scope": 751,
									"src": "8828:141:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										81
									],
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "9497:144:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 450,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "9513:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "9521:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 452,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "9532:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 449,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "9503:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9503:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "9503:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 456,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "9554:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 457,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "9562:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9562:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 459,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "9576:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 461,
																	"indexExpression": {
																		"id": 460,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 440,
																		"src": "9588:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9576:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 464,
																"indexExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 462,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 116,
																		"src": "9596:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9596:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9576:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 465,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "9612:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9576:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "9545:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9545:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "9545:74:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9632:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 448,
												"id": 470,
												"nodeType": "Return",
												"src": "9625:11:0"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "8973:424:0",
										"text": " @dev See {ZRC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ZRC20};\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for `sender`'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "9409:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9430:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "9422:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9422:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "9446:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "9438:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9465:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "9457:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9421:51:0"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "9491:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 446,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9491:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9490:6:0"
									},
									"scope": 751,
									"src": "9400:241:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "9914:142:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "9928:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9945:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9937:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 486,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9937:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9937:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9928:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964206163636f756e74",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9948:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d90a07aebca820f5ab8b30e947058a0c797639b66651be5f42963899002b481c",
																"typeString": "literal_string \"invalid account\""
															},
															"value": "invalid account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d90a07aebca820f5ab8b30e947058a0c797639b66651be5f42963899002b481c",
																"typeString": "literal_string \"invalid account\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9920:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9920:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "9920:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "9980:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9987:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9980:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420616d6f756e74",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9989:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
																"typeString": "literal_string \"invalid amount\""
															},
															"value": "invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
																"typeString": "literal_string \"invalid amount\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9972:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9972:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "9972:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 502,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "10018:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "10027:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 501,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "10012:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10012:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "10012:22:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10047:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 483,
												"id": 507,
												"nodeType": "Return",
												"src": "10040:11:0"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "9646:183:0",
										"text": " @dev Creates `amount` tokens and assigns them to `msg.sender`, increasing\n the total supply.\n Requirements\n - `msg.sender` must be the token owner"
									},
									"functionSelector": "40c10f19",
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 480,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 479,
												"name": "onlyDepositor",
												"nameLocations": [
													"9885:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 309,
												"src": "9885:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9885:13:0"
										}
									],
									"name": "mint",
									"nameLocation": "9841:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9854:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "9846:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9846:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9870:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "9862:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9845:32:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "9908:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9908:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9907:6:0"
									},
									"scope": 751,
									"src": "9832:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "10219:142:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 522,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "10233:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10250:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10242:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 523,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10242:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 526,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10242:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10233:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c6964206163636f756e74",
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10253:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d90a07aebca820f5ab8b30e947058a0c797639b66651be5f42963899002b481c",
																"typeString": "literal_string \"invalid account\""
															},
															"value": "invalid account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d90a07aebca820f5ab8b30e947058a0c797639b66651be5f42963899002b481c",
																"typeString": "literal_string \"invalid account\""
															}
														],
														"id": 521,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10225:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10225:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "10225:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "10285:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10292:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10285:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e76616c696420616d6f756e74",
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10294:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
																"typeString": "literal_string \"invalid amount\""
															},
															"value": "invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_428d2b45bb1c86227a8688f1c30f1c359824c9298dfce034ebf8ca193afdf5e7",
																"typeString": "literal_string \"invalid amount\""
															}
														],
														"id": 531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10277:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10277:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "10277:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 539,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "10323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 540,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "10332:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 538,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "10317:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10317:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "10317:22:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10352:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 520,
												"id": 544,
												"nodeType": "Return",
												"src": "10345:11:0"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "10060:73:0",
										"text": " @dev Burn `amount` tokens and decreasing the total supply."
									},
									"functionSelector": "9dc29fac",
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 517,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 516,
												"name": "onlyDepositor",
												"nameLocations": [
													"10190:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 309,
												"src": "10190:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10190:13:0"
										}
									],
									"name": "burn",
									"nameLocation": "10145:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10158:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "10150:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10150:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10175:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "10167:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10149:33:0"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "10213:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 518,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10213:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10212:6:0"
									},
									"scope": 751,
									"src": "10136:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "10884:315:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 557,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "10898:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10916:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10908:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 558,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10908:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10908:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10898:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10920:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a71d2694bc6d2108aedf85dd0a70f7e700b05dc386eed9d5e52d1f6164cd7ca1",
																"typeString": "literal_string \"ZRC20: transfer from the zero address\""
															},
															"value": "ZRC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a71d2694bc6d2108aedf85dd0a70f7e700b05dc386eed9d5e52d1f6164cd7ca1",
																"typeString": "literal_string \"ZRC20: transfer from the zero address\""
															}
														],
														"id": 556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10890:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10890:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "10890:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 567,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "10974:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10995:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10987:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 568,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10987:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10987:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10974:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10999:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b35b1575e9cbca8c6549a597fa908d5f347c702d658e53d30245451711ba64a",
																"typeString": "literal_string \"ZRC20: transfer to the zero address\""
															},
															"value": "ZRC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b35b1575e9cbca8c6549a597fa908d5f347c702d658e53d30245451711ba64a",
																"typeString": "literal_string \"ZRC20: transfer to the zero address\""
															}
														],
														"id": 566,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10966:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10966:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "10966:71:0"
											},
											{
												"expression": {
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 576,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "11044:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 578,
														"indexExpression": {
															"id": 577,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "11054:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11044:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 579,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "11064:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 581,
															"indexExpression": {
																"id": 580,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "11074:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11064:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 582,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "11084:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11064:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11044:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 585,
												"nodeType": "ExpressionStatement",
												"src": "11044:46:0"
											},
											{
												"expression": {
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 586,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "11096:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 587,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "11106:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11096:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 589,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "11119:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 591,
															"indexExpression": {
																"id": 590,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 551,
																"src": "11129:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11119:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 592,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "11142:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11119:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11096:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "11096:52:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 597,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "11168:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "11176:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 599,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "11187:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 596,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "11159:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11159:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "EmitStatement",
												"src": "11154:40:0"
											}
										]
									},
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "10365:437:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "10814:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10832:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "10824:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10824:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "10848:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "10840:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10867:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "10859:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10823:51:0"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10884:0:0"
									},
									"scope": 751,
									"src": "10805:394:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "11506:221:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 612,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "11520:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11539:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11531:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 613,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11531:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11531:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11520:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11543:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00c78195edab24998ca9c2bf5e4ef3b2abff86c85e4d41adc167136dfa649256",
																"typeString": "literal_string \"ZRC20: mint to the zero address\""
															},
															"value": "ZRC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00c78195edab24998ca9c2bf5e4ef3b2abff86c85e4d41adc167136dfa649256",
																"typeString": "literal_string \"ZRC20: mint to the zero address\""
															}
														],
														"id": 611,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11512:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11512:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "11512:65:0"
											},
											{
												"expression": {
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 621,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "11584:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 622,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "11599:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 623,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "11614:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11599:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11584:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "11584:36:0"
											},
											{
												"expression": {
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 627,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "11626:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 629,
														"indexExpression": {
															"id": 628,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "11636:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11626:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 630,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "11647:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 632,
															"indexExpression": {
																"id": 631,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "11657:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11647:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 633,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "11668:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11647:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11626:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "11626:48:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11702:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11694:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 638,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11694:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11694:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "11706:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "11715:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 637,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "11685:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11685:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "EmitStatement",
												"src": "11680:42:0"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "11203:243:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements\n - `to` cannot be the zero address."
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "11458:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11472:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "11464:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11489:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "11481:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11463:33:0"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11506:0:0"
									},
									"scope": 751,
									"src": "11449:278:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "12079:223:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 656,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "12093:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12104:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 657,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12104:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12104:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12093:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12116:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8b480bb39d2a21861f1e5f3a5be7d7d7f8db2e6678510bdc3a6a411edf96ae9",
																"typeString": "literal_string \"ZRC20: burn from the zero address\""
															},
															"value": "ZRC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8b480bb39d2a21861f1e5f3a5be7d7d7f8db2e6678510bdc3a6a411edf96ae9",
																"typeString": "literal_string \"ZRC20: burn from the zero address\""
															}
														],
														"id": 655,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12085:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12085:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "12085:67:0"
											},
											{
												"expression": {
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 665,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "12159:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 667,
														"indexExpression": {
															"id": 666,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "12169:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12159:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 668,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "12180:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 670,
															"indexExpression": {
																"id": 669,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "12190:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12180:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 671,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "12201:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12180:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12159:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "12159:48:0"
											},
											{
												"expression": {
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 675,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "12213:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 676,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "12228:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 677,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "12243:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12228:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12213:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "12213:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 682,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "12269:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12286:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12278:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 683,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12278:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12278:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 687,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "12290:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 681,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "12260:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12260:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "EmitStatement",
												"src": "12255:42:0"
											}
										]
									},
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "11731:288:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "12031:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12045:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "12037:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12037:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12062:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "12054:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12036:33:0"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12079:0:0"
									},
									"scope": 751,
									"src": "12022:280:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "12774:239:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 702,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "12788:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12805:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12797:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 703,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12797:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12797:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12788:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12809:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f29340249770fa0769ce318b3b121c379b8a6b71b788bfc9ec0fe244c175a51",
																"typeString": "literal_string \"ZRC20: approve from the zero address\""
															},
															"value": "ZRC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f29340249770fa0769ce318b3b121c379b8a6b71b788bfc9ec0fe244c175a51",
																"typeString": "literal_string \"ZRC20: approve from the zero address\""
															}
														],
														"id": 701,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12780:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12780:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "12780:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 712,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "12862:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12881:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12873:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 713,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12873:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12873:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12862:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12885:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc86d182860676b82b7d43edae2df8eb2c3ae68d776f2e04b8c77a3eff5a3698",
																"typeString": "literal_string \"ZRC20: approve to the zero address\""
															},
															"value": "ZRC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc86d182860676b82b7d43edae2df8eb2c3ae68d776f2e04b8c77a3eff5a3698",
																"typeString": "literal_string \"ZRC20: approve to the zero address\""
															}
														],
														"id": 711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12854:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12854:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "12854:68:0"
											},
											{
												"expression": {
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 721,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "12929:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 724,
															"indexExpression": {
																"id": 722,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "12941:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12929:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 725,
														"indexExpression": {
															"id": 723,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "12948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12929:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 726,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "12959:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12929:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "12929:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 730,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "12985:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "12992:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "13001:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 729,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "12976:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12976:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 734,
												"nodeType": "EmitStatement",
												"src": "12971:37:0"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "12306:390:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner`s tokens.\n This is internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "12708:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12725:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "12717:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12740:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "12732:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12757:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "12749:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12716:48:0"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12774:0:0"
									},
									"scope": 751,
									"src": "12699:314:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "13082:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 744,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 116,
																		"src": "13109:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13109:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13101:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 742,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13101:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13101:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 741,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967275,
														"src": "13088:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13088:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "13088:35:0"
											}
										]
									},
									"functionSelector": "092a5cce",
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 739,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 738,
												"name": "onlyOwner",
												"nameLocations": [
													"13073:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 183,
												"src": "13073:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13073:9:0"
										}
									],
									"name": "destroyContract",
									"nameLocation": "13046:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13061:2:0"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13082:0:0"
									},
									"scope": 751,
									"src": "13037:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 752,
							"src": "6699:6432:0",
							"usedErrors": []
						}
					],
					"src": "32:13100:0"
				},
				"id": 0
			}
		}
	}
}